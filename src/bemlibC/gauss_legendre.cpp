// This file is part of Bembel, the higher order C++ boundary element library.
// It was written as part of a cooperation of J. Doelz, H. Harbrecht, S. Kurz,
// M. Multerer, S. Schoeps, and F. Wolf at Technische Universtaet Darmstadt,
// Universitaet Basel, and Universita della Svizzera italiana, Lugano. This
// source code is subject to the GNU General Public License version 3 and
// provided WITHOUT ANY WARRANTY, see <http://www.bembel.eu> for further
// information.
#include "gauss_legendre.h"
#include "assert.h"

namespace Bembel {
const int g_max = 38;

void Regel1_Legendre(quadrature *Q) {
  Q->nop = 1;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.5;

  Q->w[0] = 1.0;

  return;
}

void Regel2_Legendre(quadrature *Q) {
  Q->nop = 2;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.2113248654051871177454256097490212721762;
  Q->xi[1] = 0.7886751345948128822545743902509787278238;

  Q->w[0] = 0.5;
  Q->w[1] = 0.5;

  return;
}

void Regel3_Legendre(quadrature *Q) {
  Q->nop = 3;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.1127016653792583114820734600217600389167;
  Q->xi[1] = 0.5;
  Q->xi[2] = 0.8872983346207416885179265399782399610833;

  Q->w[0] = 0.2777777777777777777777777777777777777778;
  Q->w[1] = 0.4444444444444444444444444444444444444444;
  Q->w[2] = 0.2777777777777777777777777777777777777778;

  return;
}

void Regel4_Legendre(quadrature *Q) {
  Q->nop = 4;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.06943184420297371238802675555359524745214;
  Q->xi[1] = 0.3300094782075718675986671204483776563997;
  Q->xi[2] = 0.6699905217924281324013328795516223436003;
  Q->xi[3] = 0.9305681557970262876119732444464047525479;

  Q->w[0] = 0.1739274225687269286865319746109997036177;
  Q->w[1] = 0.3260725774312730713134680253890002963823;
  Q->w[2] = 0.3260725774312730713134680253890002963823;
  Q->w[3] = 0.1739274225687269286865319746109997036177;

  return;
}

void Regel5_Legendre(quadrature *Q) {
  Q->nop = 5;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.04691007703066800360118656085030351743717;
  Q->xi[1] = 0.2307653449471584544818427896498955975164;
  Q->xi[2] = 0.5;
  Q->xi[3] = 0.7692346550528415455181572103501044024836;
  Q->xi[4] = 0.9530899229693319963988134391496964825628;

  Q->w[0] = 0.1184634425280945437571320203599586813216;
  Q->w[1] = 0.2393143352496832340206457574178190964561;
  Q->w[2] = 0.2844444444444444444444444444444444444444;
  Q->w[3] = 0.2393143352496832340206457574178190964561;
  Q->w[4] = 0.1184634425280945437571320203599586813216;

  return;
}

void Regel6_Legendre(quadrature *Q) {
  Q->nop = 6;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.03376524289842398609384922275300269543262;
  Q->xi[1] = 0.1693953067668677431693002024900473264968;
  Q->xi[2] = 0.3806904069584015456847491391596440322907;
  Q->xi[3] = 0.6193095930415984543152508608403559677093;
  Q->xi[4] = 0.8306046932331322568306997975099526735032;
  Q->xi[5] = 0.9662347571015760139061507772469973045674;

  Q->w[0] = 0.08566224618958517252014807108636644676341;
  Q->w[1] = 0.1803807865240693037849167569188580558308;
  Q->w[2] = 0.2339569672863455236949351719947754974058;
  Q->w[3] = 0.2339569672863455236949351719947754974058;
  Q->w[4] = 0.1803807865240693037849167569188580558308;
  Q->w[5] = 0.08566224618958517252014807108636644676341;

  return;
}

void Regel7_Legendre(quadrature *Q) {
  Q->nop = 7;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.02544604382862073773690515797607436879961;
  Q->xi[1] = 0.1292344072003027800680676133596057964629;
  Q->xi[2] = 0.2970774243113014165466967939615192683263;
  Q->xi[3] = 0.5;
  Q->xi[4] = 0.7029225756886985834533032060384807316737;
  Q->xi[5] = 0.8707655927996972199319323866403942035371;
  Q->xi[6] = 0.9745539561713792622630948420239256312004;

  Q->w[0] = 0.06474248308443484663530571633954100916429;
  Q->w[1] = 0.1398526957446383339507338857118897912435;
  Q->w[2] = 0.1909150252525594724751848877444875669392;
  Q->w[3] = 0.2089795918367346938775510204081632653061;
  Q->w[4] = 0.1909150252525594724751848877444875669392;
  Q->w[5] = 0.1398526957446383339507338857118897912435;
  Q->w[6] = 0.06474248308443484663530571633954100916429;

  return;
}

void Regel8_Legendre(quadrature *Q) {
  Q->nop = 8;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.01985507175123188415821956571526350478588;
  Q->xi[1] = 0.1016667612931866302042230317620847815814;
  Q->xi[2] = 0.237233795041835507091130475405376825479;
  Q->xi[3] = 0.4082826787521750975302619288199080096666;
  Q->xi[4] = 0.5917173212478249024697380711800919903334;
  Q->xi[5] = 0.762766204958164492908869524594623174521;
  Q->xi[6] = 0.8983332387068133697957769682379152184186;
  Q->xi[7] = 0.9801449282487681158417804342847364952141;

  Q->w[0] = 0.0506142681451881295762656771549810950577;
  Q->w[1] = 0.1111905172266872352721779972131204422151;
  Q->w[2] = 0.1568533229389436436689811009933006566302;
  Q->w[3] = 0.1813418916891809914825752246385978060971;
  Q->w[4] = 0.1813418916891809914825752246385978060971;
  Q->w[5] = 0.1568533229389436436689811009933006566302;
  Q->w[6] = 0.1111905172266872352721779972131204422151;
  Q->w[7] = 0.0506142681451881295762656771549810950577;

  return;
}

void Regel9_Legendre(quadrature *Q) {
  Q->nop = 9;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.0159198802461869550822118985481635649753;
  Q->xi[1] = 0.08198444633668210285028510596513256172795;
  Q->xi[2] = 0.1933142836497048013456489803292629076071;
  Q->xi[3] = 0.337873288298095535480730992678331695714;
  Q->xi[4] = 0.5;
  Q->xi[5] = 0.662126711701904464519269007321668304286;
  Q->xi[6] = 0.8066857163502951986543510196707370923929;
  Q->xi[7] = 0.9180155536633178971497148940348674382721;
  Q->xi[8] = 0.9840801197538130449177881014518364350247;

  Q->w[0] = 0.04063719418078720598594607905526182533783;
  Q->w[1] = 0.09032408034742870202923601562145640475717;
  Q->w[2] = 0.1303053482014677311593714347093164248859;
  Q->w[3] = 0.1561735385200014200343152032922218327994;
  Q->w[4] = 0.1651196775006298815822625346434870244394;
  Q->w[5] = 0.1561735385200014200343152032922218327994;
  Q->w[6] = 0.1303053482014677311593714347093164248859;
  Q->w[7] = 0.09032408034742870202923601562145640475717;
  Q->w[8] = 0.04063719418078720598594607905526182533783;

  return;
}

void Regel10_Legendre(quadrature *Q) {
  Q->nop = 10;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.01304673574141413996101799395777397328587;
  Q->xi[1] = 0.06746831665550774463395165578825347573623;
  Q->xi[2] = 0.1602952158504877968828363174425632121154;
  Q->xi[3] = 0.2833023029353764046003670284171079189;
  Q->xi[4] = 0.4255628305091843945575869994351400076912;
  Q->xi[5] = 0.5744371694908156054424130005648599923088;
  Q->xi[6] = 0.7166976970646235953996329715828920811;
  Q->xi[7] = 0.8397047841495122031171636825574367878846;
  Q->xi[8] = 0.9325316833444922553660483442117465242638;
  Q->xi[9] = 0.9869532642585858600389820060422260267141;

  Q->w[0] = 0.03333567215434406879678440494666589642893;
  Q->w[1] = 0.07472567457529029657288816982884866620128;
  Q->w[2] = 0.1095431812579910219977674671140815962294;
  Q->w[3] = 0.1346333596549981775456134607847346764299;
  Q->w[4] = 0.1477621123573764350869464973256691647105;
  Q->w[5] = 0.1477621123573764350869464973256691647105;
  Q->w[6] = 0.1346333596549981775456134607847346764299;
  Q->w[7] = 0.1095431812579910219977674671140815962294;
  Q->w[8] = 0.07472567457529029657288816982884866620128;
  Q->w[9] = 0.03333567215434406879678440494666589642893;

  return;
}

void Regel11_Legendre(quadrature *Q) {
  Q->nop = 11;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.01088567092697150359803099943857130461429;
  Q->xi[1] = 0.05646870011595235046242111534803636668416;
  Q->xi[2] = 0.1349239972129753379532918739844232709752;
  Q->xi[3] = 0.2404519353965940920371371652706952227599;
  Q->xi[4] = 0.3652284220238275138342340072995692376602;
  Q->xi[5] = 0.5;
  Q->xi[6] = 0.6347715779761724861657659927004307623398;
  Q->xi[7] = 0.7595480646034059079628628347293047772401;
  Q->xi[8] = 0.8650760027870246620467081260155767290248;
  Q->xi[9] = 0.9435312998840476495375788846519636333158;
  Q->xi[10] = 0.9891143290730284964019690005614286953857;

  Q->w[0] = 0.02783428355808683324137686022127428936426;
  Q->w[1] = 0.06279018473245231231734714961197005009881;
  Q->w[2] = 0.09314510546386712571304882071582794584564;
  Q->w[3] = 0.1165968822959952399592618524215875697159;
  Q->w[4] = 0.1314022722551233310903444349452545976864;
  Q->w[5] = 0.136462543388950315357241764168171094578;
  Q->w[6] = 0.1314022722551233310903444349452545976864;
  Q->w[7] = 0.1165968822959952399592618524215875697159;
  Q->w[8] = 0.09314510546386712571304882071582794584564;
  Q->w[9] = 0.06279018473245231231734714961197005009881;
  Q->w[10] = 0.02783428355808683324137686022127428936426;

  return;
}

void Regel12_Legendre(quadrature *Q) {
  Q->nop = 12;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.009219682876640374654725454925359588519922;
  Q->xi[1] = 0.0479413718147625716607670669404519037312;
  Q->xi[2] = 0.1150486629028476564815530833935909620075;
  Q->xi[3] = 0.2063410228566912763516487905297328598155;
  Q->xi[4] = 0.3160842505009099031236542316781412193718;
  Q->xi[5] = 0.4373832957442655422637793152680734350083;
  Q->xi[6] = 0.5626167042557344577362206847319265649917;
  Q->xi[7] = 0.6839157494990900968763457683218587806282;
  Q->xi[8] = 0.7936589771433087236483512094702671401845;
  Q->xi[9] = 0.8849513370971523435184469166064090379925;
  Q->xi[10] = 0.9520586281852374283392329330595480962688;
  Q->xi[11] = 0.9907803171233596253452745450746404114801;

  Q->w[0] = 0.02358766819325591359730798074250853015851;
  Q->w[1] = 0.05346966299765921548012735909699811210729;
  Q->w[2] = 0.08003916427167311316732626477167953593601;
  Q->w[3] = 0.1015837133615329608745322279048991882533;
  Q->w[4] = 0.1167462682691774043804249494624390281297;
  Q->w[5] = 0.1245735229067013925002812180214756054152;
  Q->w[6] = 0.1245735229067013925002812180214756054152;
  Q->w[7] = 0.1167462682691774043804249494624390281297;
  Q->w[8] = 0.1015837133615329608745322279048991882533;
  Q->w[9] = 0.08003916427167311316732626477167953593601;
  Q->w[10] = 0.05346966299765921548012735909699811210729;
  Q->w[11] = 0.02358766819325591359730798074250853015851;

  return;
}

void Regel13_Legendre(quadrature *Q) {
  Q->nop = 13;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.007908472640705925263585275596445194467505;
  Q->xi[1] = 0.04120080038851101739672608174964024380476;
  Q->xi[2] = 0.09921095463334504360289675520857005484719;
  Q->xi[3] = 0.1788253302798298896780076965022421749642;
  Q->xi[4] = 0.275753624481776573561043573936180066099;
  Q->xi[5] = 0.3847708420224326029672359394510055823942;
  Q->xi[6] = 0.5;
  Q->xi[7] = 0.6152291579775673970327640605489944176058;
  Q->xi[8] = 0.724246375518223426438956426063819933901;
  Q->xi[9] = 0.8211746697201701103219923034977578250358;
  Q->xi[10] = 0.9007890453666549563971032447914299451528;
  Q->xi[11] = 0.9587991996114889826032739182503597561952;
  Q->xi[12] = 0.9920915273592940747364147244035548055325;

  Q->w[0] = 0.02024200238265793976001079610049303002099;
  Q->w[1] = 0.04606074991886422395721088797689856046184;
  Q->w[2] = 0.06943675510989361923180088843443573381093;
  Q->w[3] = 0.08907299038097286914002334599804899775641;
  Q->w[4] = 0.1039080237684442511562616096530263816933;
  Q->w[5] = 0.1131415901314486192060450930198883092174;
  Q->w[6] = 0.1162757766154369550972947576344179740783;
  Q->w[7] = 0.1131415901314486192060450930198883092174;
  Q->w[8] = 0.1039080237684442511562616096530263816933;
  Q->w[9] = 0.08907299038097286914002334599804899775641;
  Q->w[10] = 0.06943675510989361923180088843443573381093;
  Q->w[11] = 0.04606074991886422395721088797689856046184;
  Q->w[12] = 0.02024200238265793976001079610049303002099;

  return;
}

void Regel14_Legendre(quadrature *Q) {
  Q->nop = 14;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.006858095651593830579201366647973599161954;
  Q->xi[1] = 0.03578255816821324133180443031106286776148;
  Q->xi[2] = 0.08639934246511750340510262867480251948015;
  Q->xi[3] = 0.1563535475941572649259900984903329312308;
  Q->xi[4] = 0.2423756818209229540173546407244056688456;
  Q->xi[5] = 0.3404438155360551197821640879157622665829;
  Q->xi[6] = 0.445972525646328168966877674890082626194;
  Q->xi[7] = 0.554027474353671831033122325109917373806;
  Q->xi[8] = 0.6595561844639448802178359120842377334171;
  Q->xi[9] = 0.7576243181790770459826453592755943311544;
  Q->xi[10] = 0.8436464524058427350740099015096670687692;
  Q->xi[11] = 0.9136006575348824965948973713251974805199;
  Q->xi[12] = 0.9642174418317867586681955696889371322385;
  Q->xi[13] = 0.993141904348406169420798633352026400838;

  Q->w[0] = 0.01755973016587593151591643806909589030985;
  Q->w[1] = 0.04007904357988010490281663853142715479185;
  Q->w[2] = 0.06075928534395159234470740453623831297833;
  Q->w[3] = 0.07860158357909676728480096931192107830283;
  Q->w[4] = 0.09276919873896890687085829506257851812446;
  Q->w[5] = 0.1025992318606478019829620328306090278552;
  Q->w[6] = 0.1076319267315788950979382216581300176375;
  Q->w[7] = 0.1076319267315788950979382216581300176375;
  Q->w[8] = 0.1025992318606478019829620328306090278552;
  Q->w[9] = 0.09276919873896890687085829506257851812446;
  Q->w[10] = 0.07860158357909676728480096931192107830283;
  Q->w[11] = 0.06075928534395159234470740453623831297833;
  Q->w[12] = 0.04007904357988010490281663853142715479185;
  Q->w[13] = 0.01755973016587593151591643806909589030985;

  return;
}

void Regel15_Legendre(quadrature *Q) {
  Q->nop = 15;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.006003740989757285755217140706693709426514;
  Q->xi[1] = 0.031363303799647047846120526144895264378;
  Q->xi[2] = 0.07589670829478639189967583961289157431687;
  Q->xi[3] = 0.1377911343199149762919069726930309951846;
  Q->xi[4] = 0.2145139136957305762313866313730446793808;
  Q->xi[5] = 0.3029243264612183150513963145094772658186;
  Q->xi[6] = 0.3994029530012827388496858483027018960936;
  Q->xi[7] = 0.5;
  Q->xi[8] = 0.6005970469987172611503141516972981039064;
  Q->xi[9] = 0.6970756735387816849486036854905227341814;
  Q->xi[10] = 0.7854860863042694237686133686269553206192;
  Q->xi[11] = 0.8622088656800850237080930273069690048154;
  Q->xi[12] = 0.9241032917052136081003241603871084256831;
  Q->xi[13] = 0.968636696200352952153879473855104735622;
  Q->xi[14] = 0.9939962590102427142447828592933062905735;

  Q->w[0] = 0.01537662099805863417731419678860220886087;
  Q->w[1] = 0.03518302374405406235463370822533366923335;
  Q->w[2] = 0.05357961023358596750593477334293465170777;
  Q->w[3] = 0.06978533896307715722390239725551416126043;
  Q->w[4] = 0.08313460290849696677660043024060440556545;
  Q->w[5] = 0.09308050000778110551340028093321141225311;
  Q->w[6] = 0.09921574266355578822805916322191966240935;
  Q->w[7] = 0.1012891209627806364403100999837596574193;
  Q->w[8] = 0.09921574266355578822805916322191966240935;
  Q->w[9] = 0.09308050000778110551340028093321141225311;
  Q->w[10] = 0.08313460290849696677660043024060440556545;
  Q->w[11] = 0.06978533896307715722390239725551416126043;
  Q->w[12] = 0.05357961023358596750593477334293465170777;
  Q->w[13] = 0.03518302374405406235463370822533366923335;
  Q->w[14] = 0.01537662099805863417731419678860220886087;

  return;
}

void Regel16_Legendre(quadrature *Q) {
  Q->nop = 16;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.005299532504175033701922913274833686286863;
  Q->xi[1] = 0.02771248846338371196100579223269582745443;
  Q->xi[2] = 0.06718439880608412805976605114380343380633;
  Q->xi[3] = 0.1222977958224984830524494025762788658231;
  Q->xi[4] = 0.1910618777986781257766641179756044905041;
  Q->xi[5] = 0.27099161117138630682879027850821121323;
  Q->xi[6] = 0.359198224610370543384769749269751946757;
  Q->xi[7] = 0.4524937450811812799073403322875209684348;
  Q->xi[8] = 0.5475062549188187200926596677124790315652;
  Q->xi[9] = 0.640801775389629456615230250730248053243;
  Q->xi[10] = 0.72900838882861369317120972149178878677;
  Q->xi[11] = 0.8089381222013218742233358820243955094959;
  Q->xi[12] = 0.8777022041775015169475505974237211341769;
  Q->xi[13] = 0.9328156011939158719402339488561965661937;
  Q->xi[14] = 0.9722875115366162880389942077673041725456;
  Q->xi[15] = 0.9947004674958249662980770867251663137131;

  Q->w[0] = 0.01357622970587704742589028622800905175613;
  Q->w[1] = 0.03112676196932394643142191849718884713749;
  Q->w[2] = 0.04757925584124639240496255380112311317763;
  Q->w[3] = 0.06231448562776693602623814109600821007244;
  Q->w[4] = 0.07479799440828836604075086527373927448525;
  Q->w[5] = 0.08457825969750126909465603951517998110582;
  Q->w[6] = 0.09130170752246179443338183398460996969178;
  Q->w[7] = 0.09472530522753424814269836160414155257345;
  Q->w[8] = 0.09472530522753424814269836160414155257345;
  Q->w[9] = 0.09130170752246179443338183398460996969178;
  Q->w[10] = 0.08457825969750126909465603951517998110582;
  Q->w[11] = 0.07479799440828836604075086527373927448525;
  Q->w[12] = 0.06231448562776693602623814109600821007244;
  Q->w[13] = 0.04757925584124639240496255380112311317763;
  Q->w[14] = 0.03112676196932394643142191849718884713749;
  Q->w[15] = 0.01357622970587704742589028622800905175613;

  return;
}

void Regel17_Legendre(quadrature *Q) {
  Q->nop = 17;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.004712262342791332162282990029667361746105;
  Q->xi[1] = 0.02466223911561611938864152105209848927831;
  Q->xi[2] = 0.05988042313650704893852215275592215368829;
  Q->xi[3] = 0.109242998051599296537384972239761974888;
  Q->xi[4] = 0.1711644203916546170748488916784988324261;
  Q->xi[5] = 0.2436547314567615160568767156852240627085;
  Q->xi[6] = 0.3243841182730618423514072414523269974797;
  Q->xi[7] = 0.4107579092520760720746612531729672212623;
  Q->xi[8] = 0.5;
  Q->xi[9] = 0.5892420907479239279253387468270327787377;
  Q->xi[10] = 0.6756158817269381576485927585476730025203;
  Q->xi[11] = 0.7563452685432384839431232843147759372915;
  Q->xi[12] = 0.8288355796083453829251511083215011675739;
  Q->xi[13] = 0.890757001948400703462615027760238025112;
  Q->xi[14] = 0.9401195768634929510614778472440778463117;
  Q->xi[15] = 0.9753377608843838806113584789479015107217;
  Q->xi[16] = 0.9952877376572086678377170099703326382539;

  Q->w[0] = 0.01207415143427396598005501314378266234585;
  Q->w[1] = 0.02772976468699360056472008267912233025642;
  Q->w[2] = 0.04251807415858959044176768509553103692525;
  Q->w[3] = 0.05594192359670198554739419281317796336792;
  Q->w[4] = 0.06756818423426273664315999085117509868606;
  Q->w[5] = 0.07702288053840514404071579740097930597024;
  Q->w[6] = 0.0840020510782250222549853318941615775106;
  Q->w[7] = 0.08828135268349632316263549505659861957546;
  Q->w[8] = 0.08972323517810326272913282213094281072439;
  Q->w[9] = 0.08828135268349632316263549505659861957546;
  Q->w[10] = 0.0840020510782250222549853318941615775106;
  Q->w[11] = 0.07702288053840514404071579740097930597024;
  Q->w[12] = 0.06756818423426273664315999085117509868606;
  Q->w[13] = 0.05594192359670198554739419281317796336792;
  Q->w[14] = 0.04251807415858959044176768509553103692525;
  Q->w[15] = 0.02772976468699360056472008267912233025642;
  Q->w[16] = 0.01207415143427396598005501314378266234585;

  return;
}

void Regel18_Legendre(quadrature *Q) {
  Q->nop = 18;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.004217415789534526634991997646924614873711;
  Q->xi[1] = 0.02208802521430112240940205353511184501358;
  Q->xi[2] = 0.05369876675122213039696970443642724229605;
  Q->xi[3] = 0.09814752051373844215879127249270460144835;
  Q->xi[4] = 0.1541564784698233960625544593555758052739;
  Q->xi[5] = 0.2201145844630262326960642257373354315362;
  Q->xi[6] = 0.2941244192685786769820341030834741814605;
  Q->xi[7] = 0.3740568871542472452055135725610443849186;
  Q->xi[8] = 0.4576124934791323493788690735321080941333;
  Q->xi[9] = 0.5423875065208676506211309264678919058667;
  Q->xi[10] = 0.6259431128457527547944864274389556150814;
  Q->xi[11] = 0.7058755807314213230179658969165258185395;
  Q->xi[12] = 0.7798854155369737673039357742626645684638;
  Q->xi[13] = 0.8458435215301766039374455406444241947261;
  Q->xi[14] = 0.9018524794862615578412087275072953985516;
  Q->xi[15] = 0.9463012332487778696030302955635727577039;
  Q->xi[16] = 0.9779119747856988775905979464648881549864;
  Q->xi[17] = 0.9957825842104654733650080023530753851263;

  Q->w[0] = 0.01080800676324165515667135513322623469384;
  Q->w[1] = 0.02485727444748489822666747310131932084043;
  Q->w[2] = 0.03821286512744452826456483880831826280266;
  Q->w[3] = 0.0504710220531435827814069924624173035314;
  Q->w[4] = 0.06127760335573923009225956340010077761408;
  Q->w[5] = 0.07032145733532532560236565187597361404775;
  Q->w[6] = 0.07734233756313262246270900191818738609661;
  Q->w[7] = 0.08213824187291636149302688823296379520617;
  Q->w[8] = 0.08457119148157179592032823506749330516705;
  Q->w[9] = 0.08457119148157179592032823506749330516705;
  Q->w[10] = 0.08213824187291636149302688823296379520617;
  Q->w[11] = 0.07734233756313262246270900191818738609661;
  Q->w[12] = 0.07032145733532532560236565187597361404775;
  Q->w[13] = 0.06127760335573923009225956340010077761408;
  Q->w[14] = 0.0504710220531435827814069924624173035314;
  Q->w[15] = 0.03821286512744452826456483880831826280266;
  Q->w[16] = 0.02485727444748489822666747310131932084043;
  Q->w[17] = 0.01080800676324165515667135513322623469384;

  return;
}

void Regel19_Legendre(quadrature *Q) {
  Q->nop = 19;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.003796578078207798405491164873369753205342;
  Q->xi[1] = 0.01989592393258498457361057965617423669245;
  Q->xi[2] = 0.0484220481925910491786695357338437560953;
  Q->xi[3] = 0.08864267173142858751053875664364304911273;
  Q->xi[4] = 0.1395169113323853106914520695881091851714;
  Q->xi[5] = 0.1997273476691594882651809175268803600658;
  Q->xi[6] = 0.2677146293120195271413664259479488160119;
  Q->xi[7] = 0.3417179500181850840049413355750775410539;
  Q->xi[8] = 0.4198206771798873120659519421296282252476;
  Q->xi[9] = 0.5;
  Q->xi[10] = 0.5801793228201126879340480578703717747524;
  Q->xi[11] = 0.6582820499818149159950586644249224589461;
  Q->xi[12] = 0.7322853706879804728586335740520511839881;
  Q->xi[13] = 0.8002726523308405117348190824731196399342;
  Q->xi[14] = 0.8604830886676146893085479304118908148286;
  Q->xi[15] = 0.9113573282685714124894612433563569508873;
  Q->xi[16] = 0.9515779518074089508213304642661562439047;
  Q->xi[17] = 0.9801040760674150154263894203438257633075;
  Q->xi[18] = 0.9962034219217922015945088351266302467947;

  Q->w[0] = 0.009730894114863238518156020732219217876453;
  Q->w[1] = 0.02240711338284980016641907870099710597588;
  Q->w[2] = 0.03452227136882061329035412900300652248092;
  Q->w[3] = 0.04574501081122499973223104706191982633046;
  Q->w[4] = 0.05578332277366699735801195084088299874067;
  Q->w[5] = 0.06437698126966811383775789242843855852792;
  Q->w[6] = 0.07130335108680330588787305472095148623783;
  Q->w[7] = 0.0763830210329298333894277004488314992305;
  Q->w[8] = 0.07948442169697717382497821973252360083939;
  Q->w[9] = 0.08052722492439184798958181266045836751995;
  Q->w[10] = 0.07948442169697717382497821973252360083939;
  Q->w[11] = 0.0763830210329298333894277004488314992305;
  Q->w[12] = 0.07130335108680330588787305472095148623783;
  Q->w[13] = 0.06437698126966811383775789242843855852792;
  Q->w[14] = 0.05578332277366699735801195084088299874067;
  Q->w[15] = 0.04574501081122499973223104706191982633046;
  Q->w[16] = 0.03452227136882061329035412900300652248092;
  Q->w[17] = 0.02240711338284980016641907870099710597588;
  Q->w[18] = 0.009730894114863238518156020732219217876453;

  return;
}

void Regel20_Legendre(quadrature *Q) {
  Q->nop = 20;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.003435700407452537606938805764339860888676;
  Q->xi[1] = 0.01801403636104310436616693440136138904397;
  Q->xi[2] = 0.04388278587433704706612377939835094347541;
  Q->xi[3] = 0.08044151408889058830273546914923965733519;
  Q->xi[4] = 0.1268340467699246036928474648221792048446;
  Q->xi[5] = 0.1819731596367424872735816518868570316283;
  Q->xi[6] = 0.2445664990245864509978179745223745007873;
  Q->xi[7] = 0.3131469556422902196637259114875363813021;
  Q->xi[8] = 0.3861070744291774609597519023157126876285;
  Q->xi[9] = 0.4617367394332513331226797953005808944976;
  Q->xi[10] = 0.5382632605667486668773202046994191055024;
  Q->xi[11] = 0.6138929255708225390402480976842873123715;
  Q->xi[12] = 0.6868530443577097803362740885124636186979;
  Q->xi[13] = 0.7554335009754135490021820254776254992127;
  Q->xi[14] = 0.8180268403632575127264183481131429683717;
  Q->xi[15] = 0.8731659532300753963071525351778207951554;
  Q->xi[16] = 0.9195584859111094116972645308507603426648;
  Q->xi[17] = 0.9561172141256629529338762206016490565246;
  Q->xi[18] = 0.981985963638956895633833065598638610956;
  Q->xi[19] = 0.9965642995925474623930611942356601391113;

  Q->w[0] = 0.008807003569576059155930981175926408181072;
  Q->w[1] = 0.02030071490019347066551997613746605493955;
  Q->w[2] = 0.0313360241670545317847532675935208031758;
  Q->w[3] = 0.04163837078835237436237907161102310305009;
  Q->w[4] = 0.05096505990862021751837506774017493808335;
  Q->w[5] = 0.05909726598075920865618868885569114350252;
  Q->w[6] = 0.06584431922458831344924724987408156745806;
  Q->w[7] = 0.07104805465919102566464916253358246651726;
  Q->w[8] = 0.07458649323630187339391436850098471834634;
  Q->w[9] = 0.07637669356536292534904216597754879674597;
  Q->w[10] = 0.07637669356536292534904216597754879674597;
  Q->w[11] = 0.07458649323630187339391436850098471834634;
  Q->w[12] = 0.07104805465919102566464916253358246651726;
  Q->w[13] = 0.06584431922458831344924724987408156745806;
  Q->w[14] = 0.05909726598075920865618868885569114350252;
  Q->w[15] = 0.05096505990862021751837506774017493808335;
  Q->w[16] = 0.04163837078835237436237907161102310305009;
  Q->w[17] = 0.0313360241670545317847532675935208031758;
  Q->w[18] = 0.02030071490019347066551997613746605493955;
  Q->w[19] = 0.008807003569576059155930981175926408181072;

  return;
}

void Regel21_Legendre(quadrature *Q) {
  Q->nop = 21;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.003123914689805249869878982031029535403331;
  Q->xi[1] = 0.01638658071684685284168889254615241928765;
  Q->xi[2] = 0.03995033292479958560490643314251555292043;
  Q->xi[3] = 0.07331831770834135817637468070621616486195;
  Q->xi[4] = 0.1157800182621610456920610743468859825895;
  Q->xi[5] = 0.1664305979012938403470166650048304187015;
  Q->xi[6] = 0.224190582056390096470490601637843356689;
  Q->xi[7] = 0.2878289398962806082131655557281059739518;
  Q->xi[8] = 0.3559893415987994516996037419676998400455;
  Q->xi[9] = 0.4272190729195524545314845088306568349418;
  Q->xi[10] = 0.5;
  Q->xi[11] = 0.5727809270804475454685154911693431650582;
  Q->xi[12] = 0.6440106584012005483003962580323001599545;
  Q->xi[13] = 0.7121710601037193917868344442718940260482;
  Q->xi[14] = 0.775809417943609903529509398362156643311;
  Q->xi[15] = 0.8335694020987061596529833349951695812985;
  Q->xi[16] = 0.8842199817378389543079389256531140174105;
  Q->xi[17] = 0.9266816822916586418236253192937838351381;
  Q->xi[18] = 0.9600496670752004143950935668574844470796;
  Q->xi[19] = 0.9836134192831531471583111074538475807123;
  Q->xi[20] = 0.9968760853101947501301210179689704645967;

  Q->w[0] = 0.008008614128887166662112308429235507632945;
  Q->w[1] = 0.01847689488542624689997533414966483309447;
  Q->w[2] = 0.02856721271342860414181791323622397874564;
  Q->w[3] = 0.03805005681418965100852582665009158961308;
  Q->w[4] = 0.04672221172801693077664487055696604424176;
  Q->w[5] = 0.05439864958357418883173728903505282101685;
  Q->w[6] = 0.06091570802686426709768358856286679917817;
  Q->w[7] = 0.06613446931666873089052628724838780216451;
  Q->w[8] = 0.0699436973955365773610667119337915554464;
  Q->w[9] = 0.07226220199498502953191358327687627180497;
  Q->w[10] = 0.0730405668248452135959925738416855941224;
  Q->w[11] = 0.07226220199498502953191358327687627180497;
  Q->w[12] = 0.0699436973955365773610667119337915554464;
  Q->w[13] = 0.06613446931666873089052628724838780216451;
  Q->w[14] = 0.06091570802686426709768358856286679917817;
  Q->w[15] = 0.05439864958357418883173728903505282101685;
  Q->w[16] = 0.04672221172801693077664487055696604424176;
  Q->w[17] = 0.03805005681418965100852582665009158961308;
  Q->w[18] = 0.02856721271342860414181791323622397874564;
  Q->w[19] = 0.01847689488542624689997533414966483309447;
  Q->w[20] = 0.008008614128887166662112308429235507632945;

  return;
}

void Regel22_Legendre(quadrature *Q) {
  Q->nop = 22;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.002852707258800353963484289419350509803473;
  Q->xi[1] = 0.01496975108228563643802450661736564459702;
  Q->xi[2] = 0.03652161390641299973965353037047340168234;
  Q->xi[3] = 0.0670937111398499317317871814903106354576;
  Q->xi[4] = 0.1060915970103959189978610222958242393059;
  Q->xi[5] = 0.1527563684066586099746550821188716143663;
  Q->xi[6] = 0.2061797982465442035205615361806763255612;
  Q->xi[7] = 0.2653220810066214867968346445167968269523;
  Q->xi[8] = 0.3290320895539578874209262897863101902204;
  Q->xi[9] = 0.3960697866558893572605767330402271328922;
  Q->xi[10] = 0.4651303633401388893930791019406859590889;
  Q->xi[11] = 0.5348696366598611106069208980593140409111;
  Q->xi[12] = 0.6039302133441106427394232669597728671078;
  Q->xi[13] = 0.6709679104460421125790737102136898097796;
  Q->xi[14] = 0.7346779189933785132031653554832031730477;
  Q->xi[15] = 0.7938202017534557964794384638193236744388;
  Q->xi[16] = 0.8472436315933413900253449178811283856337;
  Q->xi[17] = 0.8939084029896040810021389777041757606941;
  Q->xi[18] = 0.9329062888601500682682128185096893645424;
  Q->xi[19] = 0.9634783860935870002603464696295265983177;
  Q->xi[20] = 0.985030248917714363561975493382634355403;
  Q->xi[21] = 0.9971472927411996460365157105806494901965;

  Q->w[0] = 0.007313997649136100342495549023592722595106;
  Q->w[1] = 0.01688745079240707739665112343295645067458;
  Q->w[2] = 0.02614666757634164297015602563660562805608;
  Q->w[3] = 0.03489823421226024404748070946510882869939;
  Q->w[4] = 0.04297080310853386370722184068635143309457;
  Q->w[5] = 0.05020707222144048246603941891526814117541;
  Q->w[6] = 0.05646614804026960919670030371089215955713;
  Q->w[7] = 0.06162618840525621214278049307740723597972;
  Q->w[8] = 0.06558675239353118536648249626515372293787;
  Q->w[9] = 0.06827074917300758567628691561575869829318;
  Q->w[10] = 0.06962593642781599668770512417090497893696;
  Q->w[11] = 0.06962593642781599668770512417090497893696;
  Q->w[12] = 0.06827074917300758567628691561575869829318;
  Q->w[13] = 0.06558675239353118536648249626515372293787;
  Q->w[14] = 0.06162618840525621214278049307740723597972;
  Q->w[15] = 0.05646614804026960919670030371089215955713;
  Q->w[16] = 0.05020707222144048246603941891526814117541;
  Q->w[17] = 0.04297080310853386370722184068635143309457;
  Q->w[18] = 0.03489823421226024404748070946510882869939;
  Q->w[19] = 0.02614666757634164297015602563660562805608;
  Q->w[20] = 0.01688745079240707739665112343295645067458;
  Q->w[21] = 0.007313997649136100342495549023592722595106;

  return;
}

void Regel23_Legendre(quadrature *Q) {
  Q->nop = 23;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.002615332501223938238037142277212819713186;
  Q->xi[1] = 0.01372876439094238402198796158961131240919;
  Q->xi[2] = 0.03351445658699194882540150548078851088215;
  Q->xi[3] = 0.06162382086477916631092155703292716418054;
  Q->xi[4] = 0.09755579919058005392444079650161072102928;
  Q->xi[5] = 0.140669318434024902769187758125690575835;
  Q->xi[6] = 0.1901950621181769218074513441752021733064;
  Q->xi[7] = 0.2452492610769962251551034760665767847276;
  Q->xi[8] = 0.304849480984854584289255563559697270711;
  Q->xi[9] = 0.3679321595148275347330652308583451985105;
  Q->xi[10] = 0.4333715878507669445341286588791169314948;
  Q->xi[11] = 0.5;
  Q->xi[12] = 0.5666284121492330554658713411208830685052;
  Q->xi[13] = 0.6320678404851724652669347691416548014895;
  Q->xi[14] = 0.695150519015145415710744436440302729289;
  Q->xi[15] = 0.7547507389230037748448965239334232152724;
  Q->xi[16] = 0.8098049378818230781925486558247978266936;
  Q->xi[17] = 0.859330681565975097230812241874309424165;
  Q->xi[18] = 0.9024442008094199460755592034983892789707;
  Q->xi[19] = 0.9383761791352208336890784429670728358195;
  Q->xi[20] = 0.9664855434130080511745984945192114891179;
  Q->xi[21] = 0.9862712356090576159780120384103886875908;
  Q->xi[22] = 0.9973846674987760617619628577227871802868;

  Q->w[0] = 0.006705929743570886040654746729307532488309;
  Q->w[1] = 0.01549400292848972215534710982094225269189;
  Q->w[2] = 0.02401883586554233428582053581601699828061;
  Q->w[3] = 0.03211621070426292606358480757945549901958;
  Q->w[4] = 0.03964070588835947746144626237102161345686;
  Q->w[5] = 0.04645788303001757373850930868488232430173;
  Q->w[6] = 0.05244604573227070503704309250737192742924;
  Q->w[7] = 0.05749832011120568247082175646698065074571;
  Q->w[8] = 0.06152454215336476523378920033600482740793;
  Q->w[9] = 0.06445286109404107498929766969989682662986;
  Q->w[10] = 0.06623101970234830868582123235165846290252;
  Q->w[11] = 0.06682728609305308767572855527292216929158;
  Q->w[12] = 0.06623101970234830868582123235165846290252;
  Q->w[13] = 0.06445286109404107498929766969989682662986;
  Q->w[14] = 0.06152454215336476523378920033600482740793;
  Q->w[15] = 0.05749832011120568247082175646698065074571;
  Q->w[16] = 0.05244604573227070503704309250737192742924;
  Q->w[17] = 0.04645788303001757373850930868488232430173;
  Q->w[18] = 0.03964070588835947746144626237102161345686;
  Q->w[19] = 0.03211621070426292606358480757945549901958;
  Q->w[20] = 0.02401883586554233428582053581601699828061;
  Q->w[21] = 0.01549400292848972215534710982094225269189;
  Q->w[22] = 0.006705929743570886040654746729307532488309;

  return;
}

void Regel24_Legendre(quadrature *Q) {
  Q->nop = 24;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.002406390001489319910001295149631594062701;
  Q->xi[1] = 0.01263572201434525090080400349591546912941;
  Q->xi[2] = 0.03086272399863362073817549914563927517259;
  Q->xi[3] = 0.05679223649779948289342282900890162245633;
  Q->xi[4] = 0.08999900701304853902302506366512739596194;
  Q->xi[5] = 0.1299379042107228178780859484500107872384;
  Q->xi[6] = 0.1759531740315122153737521065446261866652;
  Q->xi[7] = 0.2272892643055802321708121913908138149946;
  Q->xi[8] = 0.2831032461869774307564578840433251437738;
  Q->xi[9] = 0.3424786601519183128066033543400948796068;
  Q->xi[10] = 0.4044405662631918454206800896214651840798;
  Q->xi[11] = 0.4679715535686971869574784586876274807045;
  Q->xi[12] = 0.5320284464313028130425215413123725192955;
  Q->xi[13] = 0.5955594337368081545793199103785348159202;
  Q->xi[14] = 0.6575213398480816871933966456599051203932;
  Q->xi[15] = 0.7168967538130225692435421159566748562262;
  Q->xi[16] = 0.7727107356944197678291878086091861850054;
  Q->xi[17] = 0.8240468259684877846262478934553738133348;
  Q->xi[18] = 0.8700620957892771821219140515499892127616;
  Q->xi[19] = 0.9100009929869514609769749363348726040381;
  Q->xi[20] = 0.9432077635022005171065771709910983775437;
  Q->xi[21] = 0.9691372760013663792618245008543607248274;
  Q->xi[22] = 0.9873642779856547490991959965040845308706;
  Q->xi[23] = 0.9975936099985106800899987048503684059373;

  Q->w[0] = 0.006170614899993599773402833535018645787955;
  Q->w[1] = 0.0142656943144668315906539079759391432246;
  Q->w[2] = 0.02213871940870990308430137410566911442966;
  Q->w[3] = 0.0296492924577183903731838792500542922706;
  Q->w[4] = 0.03667324070554015286701680762655825905967;
  Q->w[5] = 0.04309508076597663795859260149187133359254;
  Q->w[6] = 0.04880932605205694413494033223212357721396;
  Q->w[7] = 0.05372213505798281739128867122330311139731;
  Q->w[8] = 0.05775283402686280067667224195339177993114;
  Q->w[9] = 0.06083523646390169560223157673813121280351;
  Q->w[10] = 0.0629187281734141480606876912555918443632;
  Q->w[11] = 0.06396909767337607848702808261234768592586;
  Q->w[12] = 0.06396909767337607848702808261234768592586;
  Q->w[13] = 0.0629187281734141480606876912555918443632;
  Q->w[14] = 0.06083523646390169560223157673813121280351;
  Q->w[15] = 0.05775283402686280067667224195339177993114;
  Q->w[16] = 0.05372213505798281739128867122330311139731;
  Q->w[17] = 0.04880932605205694413494033223212357721396;
  Q->w[18] = 0.04309508076597663795859260149187133359254;
  Q->w[19] = 0.03667324070554015286701680762655825905967;
  Q->w[20] = 0.0296492924577183903731838792500542922706;
  Q->w[21] = 0.02213871940870990308430137410566911442966;
  Q->w[22] = 0.0142656943144668315906539079759391432246;
  Q->w[23] = 0.006170614899993599773402833535018645787955;

  return;
}

void Regel25_Legendre(quadrature *Q) {
  Q->nop = 25;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.002221515104750951045607526553049191371219;
  Q->xi[1] = 0.01166803927024124425084230676020296612731;
  Q->xi[2] = 0.0285127143855128302929944151707647340474;
  Q->xi[3] = 0.05250400106086231557447899660859752291272;
  Q->xi[4] = 0.08327868561958299928948944565321521526952;
  Q->xi[5] = 0.1203703684813211847113585673978195118062;
  Q->xi[6] = 0.1632168157632658177574396833761889120583;
  Q->xi[7] = 0.2111685348793885161381550791936729663021;
  Q->xi[8] = 0.2634986342771425197389089424954039793341;
  Q->xi[9] = 0.319413847095306081132089134936179666289;
  Q->xi[10] = 0.3780665581395057839774048186012742067972;
  Q->xi[11] = 0.4385676536946448018063200905959815972339;
  Q->xi[12] = 0.5;
  Q->xi[13] = 0.5614323463053551981936799094040184027661;
  Q->xi[14] = 0.6219334418604942160225951813987257932028;
  Q->xi[15] = 0.680586152904693918867910865063820333711;
  Q->xi[16] = 0.7365013657228574802610910575045960206659;
  Q->xi[17] = 0.7888314651206114838618449208063270336979;
  Q->xi[18] = 0.8367831842367341822425603166238110879417;
  Q->xi[19] = 0.8796296315186788152886414326021804881938;
  Q->xi[20] = 0.9167213143804170007105105543467847847305;
  Q->xi[21] = 0.9474959989391376844255210033914024770873;
  Q->xi[22] = 0.9714872856144871697070055848292352659526;
  Q->xi[23] = 0.9883319607297587557491576932397970338727;
  Q->xi[24] = 0.9977784848952490489543924734469508086288;

  Q->w[0] = 0.00569689925051314397395148205661738680166;
  Q->w[1] = 0.01317749330751606863095090764764957246798;
  Q->w[2] = 0.02046957835065315632781174385582297683042;
  Q->w[3] = 0.02745234798791759596296844577023666208005;
  Q->w[4] = 0.03401916690617845860359359282835398427735;
  Q->w[5] = 0.04007035016750050900661747983455565114511;
  Q->w[6] = 0.0455141309914818249057486103514458266905;
  Q->w[7] = 0.05026797453352532210110344519634291349423;
  Q->w[8] = 0.05425981223713182655804697852505830967004;
  Q->w[9] = 0.05742912957285582416966277293477790432047;
  Q->w[10] = 0.05972788176789238611408906325645052369509;
  Q->w[11] = 0.06112122149515502084447975947292575291753;
  Q->w[12] = 0.06158802686335772560195143653952507121912;
  Q->w[13] = 0.06112122149515502084447975947292575291753;
  Q->w[14] = 0.05972788176789238611408906325645052369509;
  Q->w[15] = 0.05742912957285582416966277293477790432047;
  Q->w[16] = 0.05425981223713182655804697852505830967004;
  Q->w[17] = 0.05026797453352532210110344519634291349423;
  Q->w[18] = 0.0455141309914818249057486103514458266905;
  Q->w[19] = 0.04007035016750050900661747983455565114511;
  Q->w[20] = 0.03401916690617845860359359282835398427735;
  Q->w[21] = 0.02745234798791759596296844577023666208005;
  Q->w[22] = 0.02046957835065315632781174385582297683042;
  Q->w[23] = 0.01317749330751606863095090764764957246798;
  Q->w[24] = 0.00569689925051314397395148205661738680166;

  return;
}

void Regel26_Legendre(quadrature *Q) {
  Q->nop = 26;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.002057149427191535498391520338546987021571;
  Q->xi[1] = 0.01080727702176450444970982284403684727654;
  Q->xi[2] = 0.02642046666914287493204235824098162273964;
  Q->xi[3] = 0.04868106900784646289116720038439487432944;
  Q->xi[4] = 0.07727702860575099060124646926608091921396;
  Q->xi[5] = 0.1118070255896605719035163763788580665119;
  Q->xi[6] = 0.1517863697900213675680930431352876510696;
  Q->xi[7] = 0.1966538534911909683840106265415564727824;
  Q->xi[8] = 0.2457796425877471411521484676372154123118;
  Q->xi[9] = 0.29847412243825684675946131145055844817;
  Q->xi[10] = 0.3539975802570215524285823089610848515576;
  Q->xi[11] = 0.4115705898215549080154711257908276250113;
  Q->xi[12] = 0.4703849532853433964531407124007983196049;
  Q->xi[13] = 0.5296150467146566035468592875992016803951;
  Q->xi[14] = 0.5884294101784450919845288742091723749887;
  Q->xi[15] = 0.6460024197429784475714176910389151484424;
  Q->xi[16] = 0.70152587756174315324053868854944155183;
  Q->xi[17] = 0.7542203574122528588478515323627845876882;
  Q->xi[18] = 0.8033461465088090316159893734584435272176;
  Q->xi[19] = 0.8482136302099786324319069568647123489304;
  Q->xi[20] = 0.8881929744103394280964836236211419334881;
  Q->xi[21] = 0.922722971394249009398753530733919080786;
  Q->xi[22] = 0.9513189309921535371088327996156051256706;
  Q->xi[23] = 0.9735795333308571250679576417590183772604;
  Q->xi[24] = 0.9891927229782354955502901771559631527235;
  Q->xi[25] = 0.9979428505728084645016084796614530129784;

  Q->w[0] = 0.005275686308671503577825593842625988952173;
  Q->w[1] = 0.01220892554631595439480791375989420012025;
  Q->w[2] = 0.01898119164718138197515157062442524734539;
  Q->w[3] = 0.02548791264857390599915995036203668976294;
  Q->w[4] = 0.03163702316478741776972684495352254786111;
  Q->w[5] = 0.03734207488282987294353789805142416931937;
  Q->w[6] = 0.04252294715674261960522388253999084829196;
  Q->w[7] = 0.04710690017795707423183244153365159927458;
  Q->w[8] = 0.0510295805472127116192070351267153961636;
  Q->w[9] = 0.05423592026428829532828971336399879114472;
  Q->w[10] = 0.05668090827315983327472035922129907262298;
  Q->w[11] = 0.05833022174264829102233125377018110681598;
  Q->w[12] = 0.05916070763963113825818554285023434232495;
  Q->w[13] = 0.05916070763963113825818554285023434232495;
  Q->w[14] = 0.05833022174264829102233125377018110681598;
  Q->w[15] = 0.05668090827315983327472035922129907262298;
  Q->w[16] = 0.05423592026428829532828971336399879114472;
  Q->w[17] = 0.0510295805472127116192070351267153961636;
  Q->w[18] = 0.04710690017795707423183244153365159927458;
  Q->w[19] = 0.04252294715674261960522388253999084829196;
  Q->w[20] = 0.03734207488282987294353789805142416931937;
  Q->w[21] = 0.03163702316478741776972684495352254786111;
  Q->w[22] = 0.02548791264857390599915995036203668976294;
  Q->w[23] = 0.01898119164718138197515157062442524734539;
  Q->w[24] = 0.01220892554631595439480791375989420012025;
  Q->w[25] = 0.005275686308671503577825593842625988952173;

  return;
}

void Regel27_Legendre(quadrature *Q) {
  Q->nop = 27;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001910368555505716530556395809385004869656;
  Q->xi[1] = 0.01003826201924938857206332216947640771618;
  Q->xi[2] = 0.02454972109264749657404598467805855345371;
  Q->xi[3] = 0.04525883966125444784967749089515537252598;
  Q->xi[4] = 0.07189604599085275484863138864657860111786;
  Q->xi[5] = 0.1041141804647458864278013279463646335403;
  Q->xi[6] = 0.1414932631302881503525918941788302251247;
  Q->xi[7] = 0.1835460140267524295361326811827556939485;
  Q->xi[8] = 0.2297242177102715525498495292200085895204;
  Q->xi[9] = 0.2794258741249865597070129221553592737762;
  Q->xi[10] = 0.332003048180745550134840482896357729105;
  Q->xi[11] = 0.3867703172802315705713804463198849144103;
  Q->xi[12] = 0.4430137071952350165335525080650116864134;
  Q->xi[13] = 0.5;
  Q->xi[14] = 0.5569862928047649834664474919349883135866;
  Q->xi[15] = 0.6132296827197684294286195536801150855897;
  Q->xi[16] = 0.667996951819254449865159517103642270895;
  Q->xi[17] = 0.7205741258750134402929870778446407262238;
  Q->xi[18] = 0.7702757822897284474501504707799914104796;
  Q->xi[19] = 0.8164539859732475704638673188172443060515;
  Q->xi[20] = 0.8585067368697118496474081058211697748753;
  Q->xi[21] = 0.8958858195352541135721986720536353664597;
  Q->xi[22] = 0.9281039540091472451513686113534213988821;
  Q->xi[23] = 0.954741160338745552150322509104844627474;
  Q->xi[24] = 0.9754502789073525034259540153219414465463;
  Q->xi[25] = 0.9899617379807506114279366778305235922838;
  Q->xi[26] = 0.9980896314444942834694436041906149951303;

  Q->w[0] = 0.004899498025647180130575027545629549049113;
  Q->w[1] = 0.01134311579809031159801710322338074440638;
  Q->w[2] = 0.01764852687870985551128914465235582056807;
  Q->w[3] = 0.02372470626030753135204835505709235911236;
  Q->w[4] = 0.02949176842991679955515041685976581658262;
  Q->w[5] = 0.03487441188312279649216144417833363806641;
  Q->w[6] = 0.03980243388652888563153747950492120148807;
  Q->w[7] = 0.04421157927187847509716140142687455552827;
  Q->w[8] = 0.04804436368501425378282632327905292958011;
  Q->w[9] = 0.0512508189088728993356238557663319046622;
  Q->w[10] = 0.05378914289426659360608149221332870240948;
  Q->w[11] = 0.05562624417842259633608154802142433741646;
  Q->w[12] = 0.05673817305448257431018497404604962896026;
  Q->w[13] = 0.05711043368947849452252286845091762434036;
  Q->w[14] = 0.05673817305448257431018497404604962896026;
  Q->w[15] = 0.05562624417842259633608154802142433741646;
  Q->w[16] = 0.05378914289426659360608149221332870240948;
  Q->w[17] = 0.0512508189088728993356238557663319046622;
  Q->w[18] = 0.04804436368501425378282632327905292958011;
  Q->w[19] = 0.04421157927187847509716140142687455552827;
  Q->w[20] = 0.03980243388652888563153747950492120148807;
  Q->w[21] = 0.03487441188312279649216144417833363806641;
  Q->w[22] = 0.02949176842991679955515041685976581658262;
  Q->w[23] = 0.02372470626030753135204835505709235911236;
  Q->w[24] = 0.01764852687870985551128914465235582056807;
  Q->w[25] = 0.01134311579809031159801710322338074440638;
  Q->w[26] = 0.004899498025647180130575027545629549049113;

  return;
}

void Regel28_Legendre(quadrature *Q) {
  Q->nop = 28;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001778751213022775024781804758344504124935;
  Q->xi[1] = 0.009348417314563623152720027096084861777923;
  Q->xi[2] = 0.0228703596855309013729490801473922054983;
  Q->xi[3] = 0.04218348680393396306515528833503642682375;
  Q->xi[4] = 0.06705373871280247552887271631015659782907;
  Q->xi[5] = 0.09717931454141041427605702228736117066415;
  Q->xi[6] = 0.132194560993184113985927744853732815992;
  Q->xi[7] = 0.1716744529805675193900509117466285892152;
  Q->xi[8] = 0.2151397640942991403459983583217845334376;
  Q->xi[9] = 0.2620628875224408694827940761662829786864;
  Q->xi[10] = 0.3118742419554606448893213952219565085642;
  Q->xi[11] = 0.3639691861824109611615868219371151325876;
  Q->xi[12] = 0.4177153589333096143592641110544172714271;
  Q->xi[13] = 0.4724603550579828647867417363290600110746;
  Q->xi[14] = 0.5275396449420171352132582636709399889254;
  Q->xi[15] = 0.5822846410666903856407358889455827285729;
  Q->xi[16] = 0.6360308138175890388384131780628848674124;
  Q->xi[17] = 0.6881257580445393551106786047780434914358;
  Q->xi[18] = 0.7379371124775591305172059238337170213136;
  Q->xi[19] = 0.7848602359057008596540016416782154665624;
  Q->xi[20] = 0.8283255470194324806099490882533714107848;
  Q->xi[21] = 0.867805439006815886014072255146267184008;
  Q->xi[22] = 0.9028206854585895857239429777126388293359;
  Q->xi[23] = 0.9329462612871975244711272836898434021709;
  Q->xi[24] = 0.9578165131960660369348447116649635731762;
  Q->xi[25] = 0.9771296403144690986270509198526077945017;
  Q->xi[26] = 0.9906515826854363768472799729039151382221;
  Q->xi[27] = 0.9982212487869772249752181952416554958751;

  Q->w[0] = 0.004562141296547258869408076961475853120172;
  Q->w[1] = 0.01056605629638562987575019049663271722568;
  Q->w[2] = 0.01645071389115218998881540958526602299077;
  Q->w[3] = 0.0221364673795021139197939388266036953075;
  Q->w[4] = 0.02755367283785837271574145911347279560953;
  Q->w[5] = 0.03263646198349979789669878338775231817682;
  Q->w[6] = 0.03732310711728438951196594358651101901082;
  Q->w[7] = 0.04155670861445060919519824912216623993057;
  Q->w[8] = 0.04528587219651642047109301566839206491143;
  Q->w[9] = 0.04846532899896495792524450304772030088252;
  Q->w[10] = 0.05105648378903038490710831925285606752329;
  Q->w[11] = 0.05302788296142320895520821849840541439496;
  Q->w[12] = 0.05435559612914706762678575965183668393764;
  Q->w[13] = 0.05502350650823759814118813280090880697831;
  Q->w[14] = 0.05502350650823759814118813280090880697831;
  Q->w[15] = 0.05435559612914706762678575965183668393764;
  Q->w[16] = 0.05302788296142320895520821849840541439496;
  Q->w[17] = 0.05105648378903038490710831925285606752329;
  Q->w[18] = 0.04846532899896495792524450304772030088252;
  Q->w[19] = 0.04528587219651642047109301566839206491143;
  Q->w[20] = 0.04155670861445060919519824912216623993057;
  Q->w[21] = 0.03732310711728438951196594358651101901082;
  Q->w[22] = 0.03263646198349979789669878338775231817682;
  Q->w[23] = 0.02755367283785837271574145911347279560953;
  Q->w[24] = 0.0221364673795021139197939388266036953075;
  Q->w[25] = 0.01645071389115218998881540958526602299077;
  Q->w[26] = 0.01056605629638562987575019049663271722568;
  Q->w[27] = 0.004562141296547258869408076961475853120172;

  return;
}

void Regel29_Legendre(quadrature *Q) {
  Q->nop = 29;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001660278869701706918404233725323057174113;
  Q->xi[1] = 0.008727247369293412564536992106811521946609;
  Q->xi[2] = 0.02135720211095613710089598150958821813122;
  Q->xi[3] = 0.03940988352347060745312328195844678729558;
  Q->xi[4] = 0.06268109753994860479110328937171072654469;
  Q->xi[5] = 0.09090725619237377750521389271060751218499;
  Q->xi[6] = 0.1237685741327614330436949613939309048937;
  Q->xi[7] = 0.1608927311986567424219074973040070368059;
  Q->xi[8] = 0.2018591014308860898102068944055051099609;
  Q->xi[9] = 0.2462035224378861789486860401862399233244;
  Q->xi[10] = 0.2934235559129956680546467069841915883383;
  Q->xi[11] = 0.3429841810661800325259020384044762758708;
  Q->xi[12] = 0.3943238569169994627468121355485312504717;
  Q->xi[13] = 0.4468608849336603849145088037848115095414;
  Q->xi[14] = 0.5;
  Q->xi[15] = 0.5531391150663396150854911962151884904586;
  Q->xi[16] = 0.6056761430830005372531878644514687495283;
  Q->xi[17] = 0.6570158189338199674740979615955237241292;
  Q->xi[18] = 0.7065764440870043319453532930158084116617;
  Q->xi[19] = 0.7537964775621138210513139598137600766756;
  Q->xi[20] = 0.7981408985691139101897931055944948900391;
  Q->xi[21] = 0.8391072688013432575780925026959929631941;
  Q->xi[22] = 0.8762314258672385669563050386060690951063;
  Q->xi[23] = 0.909092743807626222494786107289392487815;
  Q->xi[24] = 0.9373189024600513952088967106282892734553;
  Q->xi[25] = 0.9605901164765293925468767180415532127044;
  Q->xi[26] = 0.9786427978890438628991040184904117818688;
  Q->xi[27] = 0.9912727526307065874354630078931884780534;
  Q->xi[28] = 0.9983397211302982930815957662746769428259;

  Q->w[0] = 0.004258451939373204827131906651124901501199;
  Q->w[1] = 0.009866042528061352991929900820197815574803;
  Q->w[2] = 0.01537024610104681132220426268730837487356;
  Q->w[3] = 0.02070103125934141805241500505703846076675;
  Q->w[4] = 0.02579741345124896195629719058977129895981;
  Q->w[5] = 0.03060154532853956927105492401195352246203;
  Q->w[6] = 0.0350589666275256392847907434744395865512;
  Q->w[7] = 0.03911916356788189191407244432984016568344;
  Q->w[8] = 0.04273612868308626377267242464860403569085;
  Q->w[9] = 0.04586887856962938167398320553855540344911;
  Q->w[10] = 0.04848191704720430315095003744134437958818;
  Q->w[11] = 0.05054563687995748306091027345374868182378;
  Q->w[12] = 0.05203665503886468695666423564256003445533;
  Q->w[13] = 0.05293807754866047070329566392609394653742;
  Q->w[14] = 0.05323969085915712212325556345483878416509;
  Q->w[15] = 0.05293807754866047070329566392609394653742;
  Q->w[16] = 0.05203665503886468695666423564256003445533;
  Q->w[17] = 0.05054563687995748306091027345374868182378;
  Q->w[18] = 0.04848191704720430315095003744134437958818;
  Q->w[19] = 0.04586887856962938167398320553855540344911;
  Q->w[20] = 0.04273612868308626377267242464860403569085;
  Q->w[21] = 0.03911916356788189191407244432984016568344;
  Q->w[22] = 0.0350589666275256392847907434744395865512;
  Q->w[23] = 0.03060154532853956927105492401195352246203;
  Q->w[24] = 0.02579741345124896195629719058977129895981;
  Q->w[25] = 0.02070103125934141805241500505703846076675;
  Q->w[26] = 0.01537024610104681132220426268730837487356;
  Q->w[27] = 0.009866042528061352991929900820197815574803;
  Q->w[28] = 0.004258451939373204827131906651124901501199;

  return;
}

void Regel30_Legendre(quadrature *Q) {
  Q->nop = 30;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001553257962675229864184974540652358329559;
  Q->xi[1] = 0.008165938360126395014983709197168599029841;
  Q->xi[2] = 0.01998906751584624389156448720910116853482;
  Q->xi[3] = 0.03689997628536283706033786145976299795676;
  Q->xi[4] = 0.05871973210397365922844176873488720497166;
  Q->xi[5] = 0.08521711880861580127855094013374904178047;
  Q->xi[6] = 0.1161112839475869025410113295127484341526;
  Q->xi[7] = 0.1510747526033421015338538059866799658088;
  Q->xi[8] = 0.1897369085053785694297612217844053503963;
  Q->xi[9] = 0.2316879259289900503679151033444636029179;
  Q->xi[10] = 0.2764831152309554116096950498385729999188;
  Q->xi[11] = 0.3236476372345609432644813964553130696732;
  Q->xi[12] = 0.3726815369160550767800974350910974460586;
  Q->xi[13] = 0.4230650431957082265181026636283720397907;
  Q->xi[14] = 0.4742640787223411520834873934166387131254;
  Q->xi[15] = 0.5257359212776588479165126065833612868746;
  Q->xi[16] = 0.5769349568042917734818973363716279602093;
  Q->xi[17] = 0.6273184630839449232199025649089025539414;
  Q->xi[18] = 0.6763523627654390567355186035446869303268;
  Q->xi[19] = 0.7235168847690445883903049501614270000812;
  Q->xi[20] = 0.7683120740710099496320848966555363970821;
  Q->xi[21] = 0.8102630914946214305702387782155946496037;
  Q->xi[22] = 0.8489252473966578984661461940133200341912;
  Q->xi[23] = 0.8838887160524130974589886704872515658474;
  Q->xi[24] = 0.9147828811913841987214490598662509582195;
  Q->xi[25] = 0.9412802678960263407715582312651127950283;
  Q->xi[26] = 0.9631000237146371629396621385402370020432;
  Q->xi[27] = 0.9800109324841537561084355127908988314652;
  Q->xi[28] = 0.9918340616398736049850162908028314009702;
  Q->xi[29] = 0.9984467420373247701358150254593476416704;

  Q->w[0] = 0.00398409624808330280773294173733681122524;
  Q->w[1] = 0.009233234155545479571151065956023634548103;
  Q->w[2] = 0.01439235394166168467485958980564602181979;
  Q->w[3] = 0.0193995962848135247984009682231738460166;
  Q->w[4] = 0.02420133641529702645146907021140375890764;
  Q->w[5] = 0.02874657810880953324086084470102806439856;
  Q->w[6] = 0.03298711494109024756406425755798118061872;
  Q->w[7] = 0.03687798736885260313412192501109536707689;
  Q->w[8] = 0.04037794761471010767734746923026486543795;
  Q->w[9] = 0.04344989360054148990119376535756285128838;
  Q->w[10] = 0.04606126111889306435881635354380938359846;
  Q->w[11] = 0.0481843685873221298197343131759049325482;
  Q->w[12] = 0.04979671029339763353139014105178473826493;
  Q->w[13] = 0.05088119487420275229821447608427702231635;
  Q->w[14] = 0.05142632644677942017064281835270752193419;
  Q->w[15] = 0.05142632644677942017064281835270752193419;
  Q->w[16] = 0.05088119487420275229821447608427702231635;
  Q->w[17] = 0.04979671029339763353139014105178473826493;
  Q->w[18] = 0.0481843685873221298197343131759049325482;
  Q->w[19] = 0.04606126111889306435881635354380938359846;
  Q->w[20] = 0.04344989360054148990119376535756285128838;
  Q->w[21] = 0.04037794761471010767734746923026486543795;
  Q->w[22] = 0.03687798736885260313412192501109536707689;
  Q->w[23] = 0.03298711494109024756406425755798118061872;
  Q->w[24] = 0.02874657810880953324086084470102806439856;
  Q->w[25] = 0.02420133641529702645146907021140375890764;
  Q->w[26] = 0.0193995962848135247984009682231738460166;
  Q->w[27] = 0.01439235394166168467485958980564602181979;
  Q->w[28] = 0.009233234155545479571151065956023634548103;
  Q->w[29] = 0.00398409624808330280773294173733681122524;

  return;
}

void Regel31_Legendre(quadrature *Q) {
  Q->nop = 31;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001456259090261462972186722888448745874277;
  Q->xi[1] = 0.007657045167423757998767416632657644530741;
  Q->xi[2] = 0.01874803745352516910547379794707084905139;
  Q->xi[3] = 0.0346215010516759175215271201353682435933;
  Q->xi[4] = 0.0551199850258644783129039955089203692282;
  Q->xi[5] = 0.08003983992686632995654773202991082197263;
  Q->xi[6] = 0.1091334257916875297968199899026577544523;
  Q->xi[7] = 0.1421116077065733580470145673167570220549;
  Q->xi[8] = 0.1786466385378698269077908983837492730042;
  Q->xi[9] = 0.2183754192964253686395275382024192860257;
  Q->xi[10] = 0.2609031089775487597797029803217571257802;
  Q->xi[11] = 0.3058070491958835284693242693562399490074;
  Q->xi[12] = 0.3526409650091491916910480511641478306236;
  Q->xi[13] = 0.4009394003322146856137935019835830311126;
  Q->xi[14] = 0.4502223439238292398374126049405296330805;
  Q->xi[15] = 0.5;
  Q->xi[16] = 0.5497776560761707601625873950594703669195;
  Q->xi[17] = 0.5990605996677853143862064980164169688874;
  Q->xi[18] = 0.6473590349908508083089519488358521693764;
  Q->xi[19] = 0.6941929508041164715306757306437600509926;
  Q->xi[20] = 0.7390968910224512402202970196782428742198;
  Q->xi[21] = 0.7816245807035746313604724617975807139743;
  Q->xi[22] = 0.8213533614621301730922091016162507269958;
  Q->xi[23] = 0.8578883922934266419529854326832429779451;
  Q->xi[24] = 0.8908665742083124702031800100973422455477;
  Q->xi[25] = 0.9199601600731336700434522679700891780274;
  Q->xi[26] = 0.9448800149741355216870960044910796307718;
  Q->xi[27] = 0.9653784989483240824784728798646317564067;
  Q->xi[28] = 0.9812519625464748308945262020529291509486;
  Q->xi[29] = 0.9923429548325762420012325833673423554693;
  Q->xi[30] = 0.9985437409097385370278132771115512541257;

  Q->w[0] = 0.003735415789624387929348437516106203511075;
  Q->w[1] = 0.008659310395155291231578998043410570683136;
  Q->w[2] = 0.01350450959248971090030435404596607807118;
  Q->w[3] = 0.01821613695619273201219600523390172116357;
  Q->w[4] = 0.02274685376360055145115792894731483863178;
  Q->w[5] = 0.02705154121245842685583312954331002136019;
  Q->w[6] = 0.03108739328051421345517177184334833357936;
  Q->w[7] = 0.03481429161770518308387806312756285525754;
  Q->w[8] = 0.03819519329938830821317883745066532246288;
  Q->w[9] = 0.04119649588079463195191168371598088530788;
  Q->w[10] = 0.04378837030423893806309903484766654611463;
  Q->w[11] = 0.04594505694682073910768143580357506274866;
  Q->w[12] = 0.04764512145615975640360209874379834227066;
  Q->w[13] = 0.04887166769316436254673700548949835191786;
  Q->w[14] = 0.04961250561333615393743775721430750700877;
  Q->w[15] = 0.04986027239671322571376691686717471982163;
  Q->w[16] = 0.04961250561333615393743775721430750700877;
  Q->w[17] = 0.04887166769316436254673700548949835191786;
  Q->w[18] = 0.04764512145615975640360209874379834227066;
  Q->w[19] = 0.04594505694682073910768143580357506274866;
  Q->w[20] = 0.04378837030423893806309903484766654611463;
  Q->w[21] = 0.04119649588079463195191168371598088530788;
  Q->w[22] = 0.03819519329938830821317883745066532246288;
  Q->w[23] = 0.03481429161770518308387806312756285525754;
  Q->w[24] = 0.03108739328051421345517177184334833357936;
  Q->w[25] = 0.02705154121245842685583312954331002136019;
  Q->w[26] = 0.02274685376360055145115792894731483863178;
  Q->w[27] = 0.01821613695619273201219600523390172116357;
  Q->w[28] = 0.01350450959248971090030435404596607807118;
  Q->w[29] = 0.008659310395155291231578998043410570683136;
  Q->w[30] = 0.003735415789624387929348437516106203511075;

  return;
}

void Regel32_Legendre(quadrature *Q) {
  Q->nop = 32;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001368069075259218227509435667479636430731;
  Q->xi[1] = 0.007194244227365832299912477684549010683802;
  Q->xi[2] = 0.01761887220624678461309403594086251980555;
  Q->xi[3] = 0.03254696203113015541454043258229533723566;
  Q->xi[4] = 0.0518394221169739380173463781403938657605;
  Q->xi[5] = 0.07531619313371501493315349751612873052256;
  Q->xi[6] = 0.1027581020160287965184513505147855489523;
  Q->xi[7] = 0.1339089406298551598062866674543664266849;
  Q->xi[8] = 0.1684778665348923995124424156683808155115;
  Q->xi[9] = 0.2061421213796188354796272617990865707745;
  Q->xi[10] = 0.2465500455338853049881262628110893849099;
  Q->xi[11] = 0.2893243619346823273179402819137867608321;
  Q->xi[12] = 0.3340656988589361751100415971349060019021;
  Q->xi[13] = 0.3803563188739314627276983954172492396956;
  Q->xi[14] = 0.4277640192086017532574068132005946738981;
  Q->xi[15] = 0.4758461671561308418825937147797489181546;
  Q->xi[16] = 0.5241538328438691581174062852202510818454;
  Q->xi[17] = 0.5722359807913982467425931867994053261019;
  Q->xi[18] = 0.6196436811260685372723016045827507603044;
  Q->xi[19] = 0.6659343011410638248899584028650939980979;
  Q->xi[20] = 0.7106756380653176726820597180862132391679;
  Q->xi[21] = 0.7534499544661146950118737371889106150901;
  Q->xi[22] = 0.7938578786203811645203727382009134292255;
  Q->xi[23] = 0.8315221334651076004875575843316191844885;
  Q->xi[24] = 0.8660910593701448401937133325456335733151;
  Q->xi[25] = 0.8972418979839712034815486494852144510477;
  Q->xi[26] = 0.9246838068662849850668465024838712694774;
  Q->xi[27] = 0.9481605778830260619826536218596061342395;
  Q->xi[28] = 0.9674530379688698445854595674177046627643;
  Q->xi[29] = 0.9823811277937532153869059640591374801944;
  Q->xi[30] = 0.9928057557726341677000875223154509893162;
  Q->xi[31] = 0.9986319309247407817724905643325203635693;

  Q->w[0] = 0.003509305004735048300203531869426591256689;
  Q->w[1] = 0.008137197365452835302585281103193309089771;
  Q->w[2] = 0.01269603265463102972787629489461201464378;
  Q->w[3] = 0.01713693145651071655134386612618635349742;
  Q->w[4] = 0.02141794901111334032843932330306276424641;
  Q->w[5] = 0.02549902963118808809808162234476084763009;
  Q->w[6] = 0.02934204673926777357264181865008544337506;
  Q->w[7] = 0.03291111138818092341882503185346938643877;
  Q->w[8] = 0.03617289705442425311269967823924389580217;
  Q->w[9] = 0.03909694789353515323587045941415333551989;
  Q->w[10] = 0.04165596211347337761109953730217430576937;
  Q->w[11] = 0.04382604650220190557138573137590114377422;
  Q->w[12] = 0.04558693934788194235643428855581853127243;
  Q->w[13] = 0.04692219954040228281959011883405863001805;
  Q->w[14] = 0.04781936003963742970954100110206555029745;
  Q->w[15] = 0.04827004425736390028338241503178789736843;
  Q->w[16] = 0.04827004425736390028338241503178789736843;
  Q->w[17] = 0.04781936003963742970954100110206555029745;
  Q->w[18] = 0.04692219954040228281959011883405863001805;
  Q->w[19] = 0.04558693934788194235643428855581853127243;
  Q->w[20] = 0.04382604650220190557138573137590114377422;
  Q->w[21] = 0.04165596211347337761109953730217430576937;
  Q->w[22] = 0.03909694789353515323587045941415333551989;
  Q->w[23] = 0.03617289705442425311269967823924389580217;
  Q->w[24] = 0.03291111138818092341882503185346938643877;
  Q->w[25] = 0.02934204673926777357264181865008544337506;
  Q->w[26] = 0.02549902963118808809808162234476084763009;
  Q->w[27] = 0.02141794901111334032843932330306276424641;
  Q->w[28] = 0.01713693145651071655134386612618635349742;
  Q->w[29] = 0.01269603265463102972787629489461201464378;
  Q->w[30] = 0.008137197365452835302585281103193309089771;
  Q->w[31] = 0.003509305004735048300203531869426591256689;

  return;
}

void Regel33_Legendre(quadrature *Q) {
  Q->nop = 33;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001287652876772391366915991209797919460885;
  Q->xi[1] = 0.006772136884678755944812150867687039205414;
  Q->xi[2] = 0.01658854515500361553581114666070387739084;
  Q->xi[3] = 0.03065281369441582482208243781822314369278;
  Q->xi[4] = 0.0488416161282832084797343342406191962624;
  Q->xi[5] = 0.07099517366174796767846925992696576333632;
  Q->xi[6] = 0.09691882186291670510189956460861141215114;
  Q->xi[7] = 0.1263847517752189210704724375510258655729;
  Q->xi[8] = 0.1591340200151286068658920265403359326655;
  Q->xi[9] = 0.1948788270818104863463562432309512842968;
  Q->xi[10] = 0.2333050476068261782255528675022539372737;
  Q->xi[11] = 0.2740749913637746521370033613796164731006;
  Q->xi[12] = 0.3168303711259633294648896883730644443515;
  Q->xi[13] = 0.3611954514237514852983759663508394971226;
  Q->xi[14] = 0.4067803505860042138321006203905880060813;
  Q->xi[15] = 0.4531844670726333071646285379387311393392;
  Q->xi[16] = 0.5;
  Q->xi[17] = 0.5468155329273666928353714620612688606608;
  Q->xi[18] = 0.5932196494139957861678993796094119939187;
  Q->xi[19] = 0.6388045485762485147016240336491605028774;
  Q->xi[20] = 0.6831696288740366705351103116269355556485;
  Q->xi[21] = 0.7259250086362253478629966386203835268994;
  Q->xi[22] = 0.7666949523931738217744471324977460627263;
  Q->xi[23] = 0.8051211729181895136536437567690487157032;
  Q->xi[24] = 0.8408659799848713931341079734596640673345;
  Q->xi[25] = 0.8736152482247810789295275624489741344271;
  Q->xi[26] = 0.9030811781370832948981004353913885878489;
  Q->xi[27] = 0.9290048263382520323215307400730342366637;
  Q->xi[28] = 0.9511583838717167915202656657593808037376;
  Q->xi[29] = 0.9693471863055841751779175621817768563072;
  Q->xi[30] = 0.9834114548449963844641888533392961226092;
  Q->xi[31] = 0.9932278631153212440551878491323129607946;
  Q->xi[32] = 0.9987123471232276086330840087902020805391;

  Q->w[0] = 0.00330311392379368902932461760423692751553;
  Q->w[1] = 0.007660850756467338063972884266830933378768;
  Q->w[2] = 0.011957774050874740175266628764593121033;
  Q->w[3] = 0.01615017931616447664078072362471564403413;
  Q->w[4] = 0.02020077066583479578170489526369924808343;
  Q->w[5] = 0.02407387140935584783507344006905982487088;
  Q->w[6] = 0.02773542331583178064247224771962955521025;
  Q->w[7] = 0.03115324126515874001581386288544880571088;
  Q->w[8] = 0.03429728640932835640297753650747932624368;
  Q->w[9] = 0.03713992742197707467123608795923602335505;
  Q->w[10] = 0.03965618239744336918195419247099879404434;
  Q->w[11] = 0.04182393803351935380696400725883029871016;
  Q->w[12] = 0.04362414380942216880364083547272322828335;
  Q->w[13] = 0.04504097933031928861987185275011181059369;
  Q->w[14] = 0.04606199332165842310662048885868153036074;
  Q->w[15] = 0.046678213032798058080499563137137732476;
  Q->w[16] = 0.04688422308010499828365227077317439219224;
  Q->w[17] = 0.046678213032798058080499563137137732476;
  Q->w[18] = 0.04606199332165842310662048885868153036074;
  Q->w[19] = 0.04504097933031928861987185275011181059369;
  Q->w[20] = 0.04362414380942216880364083547272322828335;
  Q->w[21] = 0.04182393803351935380696400725883029871016;
  Q->w[22] = 0.03965618239744336918195419247099879404434;
  Q->w[23] = 0.03713992742197707467123608795923602335505;
  Q->w[24] = 0.03429728640932835640297753650747932624368;
  Q->w[25] = 0.03115324126515874001581386288544880571088;
  Q->w[26] = 0.02773542331583178064247224771962955521025;
  Q->w[27] = 0.02407387140935584783507344006905982487088;
  Q->w[28] = 0.02020077066583479578170489526369924808343;
  Q->w[29] = 0.01615017931616447664078072362471564403413;
  Q->w[30] = 0.011957774050874740175266628764593121033;
  Q->w[31] = 0.007660850756467338063972884266830933378768;
  Q->w[32] = 0.00330311392379368902932461760423692751553;

  return;
}

void Regel34_Legendre(quadrature *Q) {
  Q->nop = 34;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001214123104579040378313781272685384299745;
  Q->xi[1] = 0.006386091796845257475124784450157513525615;
  Q->xi[2] = 0.0156458687333278591176767134720032445161;
  Q->xi[3] = 0.0289188012974464541841619872697135484969;
  Q->xi[4] = 0.0460951611408377655995500554903562699188;
  Q->xi[5] = 0.06703268083271776536821395466435007765168;
  Q->xi[6] = 0.09155788604953316770421054670651337080343;
  Q->xi[7] = 0.1194675616850634929062955155106315831978;
  Q->xi[8] = 0.1505304433918685460334999467121114086811;
  Q->xi[9] = 0.1844891364597357273411121222404958610946;
  Q->xi[10] = 0.2210622496651266786317700568918627093313;
  Q->xi[11] = 0.2599467274048364829029486597463014457063;
  Q->xi[12] = 0.3008203611206770296842526235338242353288;
  Q->xi[13] = 0.3433444593302683762708416171745110026144;
  Q->xi[14] = 0.3871666541917752580656794095328263778239;
  Q->xi[15] = 0.4319238213704085120527855878344410842514;
  Q->xi[16] = 0.4772450890234487286254621645740349180845;
  Q->xi[17] = 0.5227549109765512713745378354259650819155;
  Q->xi[18] = 0.5680761786295914879472144121655589157486;
  Q->xi[19] = 0.6128333458082247419343205904671736221761;
  Q->xi[20] = 0.6566555406697316237291583828254889973856;
  Q->xi[21] = 0.6991796388793229703157473764661757646712;
  Q->xi[22] = 0.7400532725951635170970513402536985542937;
  Q->xi[23] = 0.7789377503348733213682299431081372906687;
  Q->xi[24] = 0.8155108635402642726588878777595041389054;
  Q->xi[25] = 0.8494695566081314539665000532878885913189;
  Q->xi[26] = 0.8805324383149365070937044844893684168022;
  Q->xi[27] = 0.9084421139504668322957894532934866291966;
  Q->xi[28] = 0.9329673191672822346317860453356499223483;
  Q->xi[29] = 0.9539048388591622344004499445096437300812;
  Q->xi[30] = 0.9710811987025535458158380127302864515031;
  Q->xi[31] = 0.9843541312666721408823232865279967554839;
  Q->xi[32] = 0.9936139082031547425248752155498424864744;
  Q->xi[33] = 0.9987858768954209596216862187273146157003;

  Q->w[0] = 0.003114570277954342359303230535718893062264;
  Q->w[1] = 0.00722508137429751770760110516437349534377;
  Q->w[2] = 0.01128186099274748504204704435747713062452;
  Q->w[3] = 0.01524569031922306590472119384065879551531;
  Q->w[4] = 0.01908329689819375816088296014498827941197;
  Q->w[5] = 0.02276280576167663622691128169763530149912;
  Q->w[6] = 0.02625370728633905308412298742123379982936;
  Q->w[7] = 0.02952706791376224659698048617526309541424;
  Q->w[8] = 0.03255576077703820568927221503244688679182;
  Q->w[9] = 0.03531468790712786249951939828384267750058;
  Q->w[10] = 0.03778098733001596563541698711421786202941;
  Q->w[11] = 0.03993422216988592236940941640321899677528;
  Q->w[12] = 0.04175654984992282759351011402307469529036;
  Q->w[13] = 0.04323286987351787489212342814037379015704;
  Q->w[14] = 0.04435094891784693464353822868244035637214;
  Q->w[15] = 0.04510152218532036478697112100874696442051;
  Q->w[16] = 0.0454783701651299368076688019742889799623;
  Q->w[17] = 0.0454783701651299368076688019742889799623;
  Q->w[18] = 0.04510152218532036478697112100874696442051;
  Q->w[19] = 0.04435094891784693464353822868244035637214;
  Q->w[20] = 0.04323286987351787489212342814037379015704;
  Q->w[21] = 0.04175654984992282759351011402307469529036;
  Q->w[22] = 0.03993422216988592236940941640321899677528;
  Q->w[23] = 0.03778098733001596563541698711421786202941;
  Q->w[24] = 0.03531468790712786249951939828384267750058;
  Q->w[25] = 0.03255576077703820568927221503244688679182;
  Q->w[26] = 0.02952706791376224659698048617526309541424;
  Q->w[27] = 0.02625370728633905308412298742123379982936;
  Q->w[28] = 0.02276280576167663622691128169763530149912;
  Q->w[29] = 0.01908329689819375816088296014498827941197;
  Q->w[30] = 0.01524569031922306590472119384065879551531;
  Q->w[31] = 0.01128186099274748504204704435747713062452;
  Q->w[32] = 0.00722508137429751770760110516437349534377;
  Q->w[33] = 0.003114570277954342359303230535718893062264;

  return;
}

void Regel35_Legendre(quadrature *Q) {
  Q->nop = 35;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001146715450199851369918430343952637403363;
  Q->xi[1] = 0.006032117778074250982441455407257007343496;
  Q->xi[2] = 0.01478119198038508339246475870761492873756;
  Q->xi[3] = 0.02732742589608633523063700723501267756859;
  Q->xi[4] = 0.04357286932034119276753146822211788475597;
  Q->xi[5] = 0.06339043748738883423835882542930736667783;
  Q->xi[6] = 0.08662505045388729658297469362572121047655;
  Q->xi[7] = 0.1130948738565437223662884953950562594941;
  Q->xi[8] = 0.142592749221685608367795684387776626519;
  Q->xi[9] = 0.1748878176670548056621035955077203683151;
  Q->xi[10] = 0.209727327625117745032748995905154964534;
  Q->xi[11] = 0.246838613379255692487851222081336311707;
  Q->xi[12] = 0.2859312292410928729061896934992600706076;
  Q->xi[13] = 0.3266992227845930270615100825348808840958;
  Q->xi[14] = 0.3688235293953519710145523997722097432568;
  Q->xi[15] = 0.4119744694170052150128481717774700351623;
  Q->xi[16] = 0.4558143283621703681995352832512255982879;
  Q->xi[17] = 0.5;
  Q->xi[18] = 0.5441856716378296318004647167487744017121;
  Q->xi[19] = 0.5880255305829947849871518282225299648377;
  Q->xi[20] = 0.6311764706046480289854476002277902567432;
  Q->xi[21] = 0.6733007772154069729384899174651191159042;
  Q->xi[22] = 0.7140687707589071270938103065007399293924;
  Q->xi[23] = 0.753161386620744307512148777918663688293;
  Q->xi[24] = 0.790272672374882254967251004094845035466;
  Q->xi[25] = 0.8251121823329451943378964044922796316849;
  Q->xi[26] = 0.857407250778314391632204315612223373481;
  Q->xi[27] = 0.8869051261434562776337115046049437405059;
  Q->xi[28] = 0.9133749495461127034170253063742787895234;
  Q->xi[29] = 0.9366095625126111657616411745706926333222;
  Q->xi[30] = 0.956427130679658807232468531777882115244;
  Q->xi[31] = 0.9726725741039136647693629927649873224314;
  Q->xi[32] = 0.9852188080196149166075352412923850712624;
  Q->xi[33] = 0.9939678822219257490175585445927429926565;
  Q->xi[34] = 0.9988532845498001486300815696560473625966;

  Q->w[0] = 0.002941716710221542487876948120056312015377;
  Q->w[1] = 0.006825414174180746133202001460258191986997;
  Q->w[2] = 0.0106614899557417904417189919831025391619;
  Q->w[3] = 0.01441463005444712702435801985724245813076;
  Q->w[4] = 0.01805505793173169026635848482377496915427;
  Q->w[5] = 0.0215542111630851093911532296874541017114;
  Q->w[6] = 0.02488468520067676490259983804249747929725;
  Q->w[7] = 0.02802040810618506428916387358255048222017;
  Q->w[8] = 0.03093683598304009444350706939434432613269;
  Q->w[9] = 0.03361114263454345198215275437407427927355;
  Q->w[10] = 0.03602239738628003233273095489263887807363;
  Q->w[11] = 0.03815172857772102676932926894211311276354;
  Q->w[12] = 0.03998247112116213146633104049252287816442;
  Q->w[13] = 0.04150029686442829418996326410808850174259;
  Q->w[14] = 0.0426933266960495626129719936955587838206;
  Q->w[15] = 0.04355222349859176712166101580277046834253;
  Q->w[16] = 0.04407026521513773148536940379654832071273;
  Q->w[17] = 0.0442433974535521453191036938888078345912;
  Q->w[18] = 0.04407026521513773148536940379654832071273;
  Q->w[19] = 0.04355222349859176712166101580277046834253;
  Q->w[20] = 0.0426933266960495626129719936955587838206;
  Q->w[21] = 0.04150029686442829418996326410808850174259;
  Q->w[22] = 0.03998247112116213146633104049252287816442;
  Q->w[23] = 0.03815172857772102676932926894211311276354;
  Q->w[24] = 0.03602239738628003233273095489263887807363;
  Q->w[25] = 0.03361114263454345198215275437407427927355;
  Q->w[26] = 0.03093683598304009444350706939434432613269;
  Q->w[27] = 0.02802040810618506428916387358255048222017;
  Q->w[28] = 0.02488468520067676490259983804249747929725;
  Q->w[29] = 0.0215542111630851093911532296874541017114;
  Q->w[30] = 0.01805505793173169026635848482377496915427;
  Q->w[31] = 0.01441463005444712702435801985724245813076;
  Q->w[32] = 0.0106614899557417904417189919831025391619;
  Q->w[33] = 0.006825414174180746133202001460258191986997;
  Q->w[34] = 0.002941716710221542487876948120056312015377;

  return;
}

void Regel36_Legendre(quadrature *Q) {
  Q->nop = 36;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001084768757957081900585827209624880675092;
  Q->xi[1] = 0.005706760548893880963302446061446276696419;
  Q->xi[2] = 0.01398615447515102533219747578444583619198;
  Q->xi[3] = 0.02586350780024622739876294252738607685531;
  Q->xi[4] = 0.04125111274217046696206638848692180003155;
  Q->xi[5] = 0.06003509955480143400878633126708220561335;
  Q->xi[6] = 0.08207641650376234679058956375069967332661;
  Q->xi[7] = 0.1072118849338967435861155174598536983488;
  Q->xi[8] = 0.1352554142032217089548697604969455072171;
  Q->xi[9] = 0.1659993817072394689514043278295411804176;
  Q->xi[10] = 0.1992161709320097324600275124632026241285;
  Q->xi[11] = 0.2346598570368774191796454599392150911694;
  Q->xi[12] = 0.2720680277832898663963911653362795370211;
  Q->xi[13] = 0.3111637264401553918386318051650461889169;
  Q->xi[14] = 0.3516575023279858647483804761274147736499;
  Q->xi[15] = 0.3932495538415672105283868855486430416208;
  Q->xi[16] = 0.4356319480953076056740033059974238494114;
  Q->xi[17] = 0.4784909007631456963865155108858182827229;
  Q->xi[18] = 0.5215090992368543036134844891141817172771;
  Q->xi[19] = 0.5643680519046923943259966940025761505886;
  Q->xi[20] = 0.6067504461584327894716131144513569583792;
  Q->xi[21] = 0.6483424976720141352516195238725852263501;
  Q->xi[22] = 0.6888362735598446081613681948349538110831;
  Q->xi[23] = 0.7279319722167101336036088346637204629789;
  Q->xi[24] = 0.7653401429631225808203545400607849088306;
  Q->xi[25] = 0.8007838290679902675399724875367973758715;
  Q->xi[26] = 0.8340006182927605310485956721704588195824;
  Q->xi[27] = 0.8647445857967782910451302395030544927829;
  Q->xi[28] = 0.8927881150661032564138844825401463016512;
  Q->xi[29] = 0.9179235834962376532094104362493003266734;
  Q->xi[30] = 0.9399649004451985659912136687329177943866;
  Q->xi[31] = 0.9587488872578295330379336115130781999685;
  Q->xi[32] = 0.9741364921997537726012370574726139231447;
  Q->xi[33] = 0.986013845524848974667802524215554163808;
  Q->xi[34] = 0.9942932394511061190366975539385537233036;
  Q->xi[35] = 0.9989152312420429180994141727903751193249;

  Q->w[0] = 0.002782859832122522680627992195273918708612;
  Q->w[1] = 0.006457973642032787202251705748895824595981;
  Q->w[2] = 0.01009075764886773576604946447911056370979;
  Q->w[3] = 0.01364931074928438954720859043399167899523;
  Q->w[4] = 0.01710690538515361496062253078135727703505;
  Q->w[5] = 0.02043787546182244773705727257163159577397;
  Q->w[6] = 0.02361754174513298920830841480833741603658;
  Q->w[7] = 0.02662235698887995954601281414310982484446;
  Q->w[8] = 0.02943007212266240865483769990946001797138;
  Q->w[9] = 0.03201989867750774477819239931292816987301;
  Q->w[10] = 0.03437266191786822130684481968180660417087;
  Q->w[11] = 0.03647094250282653067693668847063710914347;
  Q->w[12] = 0.03829920532293533726437886686075082086396;
  Q->w[13] = 0.03984391445603580095436233275093195366377;
  Q->w[14] = 0.04109363335216985475861173677247115143248;
  Q->w[15] = 0.04203910948983096746672881214579791060197;
  Q->w[16] = 0.04267334286966931374592527153824488549939;
  Q->w[17] = 0.04299163783519737374504258739526327708003;
  Q->w[18] = 0.04299163783519737374504258739526327708003;
  Q->w[19] = 0.04267334286966931374592527153824488549939;
  Q->w[20] = 0.04203910948983096746672881214579791060197;
  Q->w[21] = 0.04109363335216985475861173677247115143248;
  Q->w[22] = 0.03984391445603580095436233275093195366377;
  Q->w[23] = 0.03829920532293533726437886686075082086396;
  Q->w[24] = 0.03647094250282653067693668847063710914347;
  Q->w[25] = 0.03437266191786822130684481968180660417087;
  Q->w[26] = 0.03201989867750774477819239931292816987301;
  Q->w[27] = 0.02943007212266240865483769990946001797138;
  Q->w[28] = 0.02662235698887995954601281414310982484446;
  Q->w[29] = 0.02361754174513298920830841480833741603658;
  Q->w[30] = 0.02043787546182244773705727257163159577397;
  Q->w[31] = 0.01710690538515361496062253078135727703505;
  Q->w[32] = 0.01364931074928438954720859043399167899523;
  Q->w[33] = 0.01009075764886773576604946447911056370979;
  Q->w[34] = 0.006457973642032787202251705748895824595981;
  Q->w[35] = 0.002782859832122522680627992195273918708612;

  return;
}

void Regel37_Legendre(quadrature *Q) {
  Q->nop = 37;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.001027708761043175529598462841318358165496;
  Q->xi[1] = 0.005407018392840406657950469707863845518774;
  Q->xi[2] = 0.01325348497175712783555476216712032759231;
  Q->xi[3] = 0.02451382836895258933571195159183703300123;
  Q->xi[4] = 0.0391092812937681286659281566496432556092;
  Q->xi[5] = 0.05693751892225696052692524549155677994659;
  Q->xi[6] = 0.07787350632972201600627186191256988415468;
  Q->xi[7] = 0.1017703997450488533034768322498377382572;
  Q->xi[8] = 0.128460583009017368726476291263093560455;
  Q->xi[9] = 0.1577568454345203212772383937844231459778;
  Q->xi[10] = 0.1894536957955377584259237042024713449791;
  Q->xi[11] = 0.2233288040692091093824508208853677632639;
  Q->xi[12] = 0.2591445610983972229264035655586804140052;
  Q->xi[13] = 0.2966497453408369449495342041930166957388;
  Q->xi[14] = 0.33558128505814650025076409933002975816;
  Q->xi[15] = 0.3756661036043171205972161242561418907342;
  Q->xi[16] = 0.4166230348800740115156641347940877812667;
  Q->xi[17] = 0.4581647955226150490284758341318004112182;
  Q->xi[18] = 0.5;
  Q->xi[19] = 0.5418352044773849509715241658681995887818;
  Q->xi[20] = 0.5833769651199259884843358652059122187333;
  Q->xi[21] = 0.6243338963956828794027838757438581092658;
  Q->xi[22] = 0.66441871494185349974923590066997024184;
  Q->xi[23] = 0.7033502546591630550504657958069833042612;
  Q->xi[24] = 0.7408554389016027770735964344413195859948;
  Q->xi[25] = 0.7766711959307908906175491791146322367361;
  Q->xi[26] = 0.8105463042044622415740762957975286550209;
  Q->xi[27] = 0.8422431545654796787227616062155768540222;
  Q->xi[28] = 0.871539416990982631273523708736906439545;
  Q->xi[29] = 0.8982296002549511466965231677501622617428;
  Q->xi[30] = 0.9221264936702779839937281380874301158453;
  Q->xi[31] = 0.9430624810777430394730747545084432200534;
  Q->xi[32] = 0.9608907187062318713340718433503567443908;
  Q->xi[33] = 0.9754861716310474106642880484081629669988;
  Q->xi[34] = 0.9867465150282428721644452378328796724077;
  Q->xi[35] = 0.9945929816071595933420495302921361544812;
  Q->xi[36] = 0.9989722912389568244704015371586816418345;

  Q->w[0] = 0.002636528639748969675861027116765194591544;
  Q->w[1] = 0.006119390050153778263152426218173287971145;
  Q->w[2] = 0.009564522244541983021750973970053087065148;
  Q->w[3] = 0.01294301849527946676137974068124364901474;
  Q->w[4] = 0.01623081992376074053361712675072936439955;
  Q->w[5] = 0.01940480125096727224448118516423800998369;
  Q->w[6] = 0.02244268233121858332870515205509818009736;
  Q->w[7] = 0.02532314882741230080193793154335817202635;
  Q->w[8] = 0.02802599399913745890426961983212633321338;
  Q->w[9] = 0.030532258261612993065494052250248292839;
  Q->w[10] = 0.03282436143637562474201188314898560909834;
  Q->w[11] = 0.03488622577785017244254067839650964559301;
  Q->w[12] = 0.03670338862424408636231331575989773249173;
  Q->w[13] = 0.03826310378526461894294399560331125774768;
  Q->w[14] = 0.039554430918764690383606093698322619258;
  Q->w[15] = 0.04056831225423251525493880089989613178323;
  Q->w[16] = 0.04129763611821862544561515057641923538665;
  Q->w[17] = 0.04173728681293139362612650474225934951022;
  Q->w[18] = 0.04188418049656945239850868318472969585844;
  Q->w[19] = 0.04173728681293139362612650474225934951022;
  Q->w[20] = 0.04129763611821862544561515057641923538665;
  Q->w[21] = 0.04056831225423251525493880089989613178323;
  Q->w[22] = 0.039554430918764690383606093698322619258;
  Q->w[23] = 0.03826310378526461894294399560331125774768;
  Q->w[24] = 0.03670338862424408636231331575989773249173;
  Q->w[25] = 0.03488622577785017244254067839650964559301;
  Q->w[26] = 0.03282436143637562474201188314898560909834;
  Q->w[27] = 0.030532258261612993065494052250248292839;
  Q->w[28] = 0.02802599399913745890426961983212633321338;
  Q->w[29] = 0.02532314882741230080193793154335817202635;
  Q->w[30] = 0.02244268233121858332870515205509818009736;
  Q->w[31] = 0.01940480125096727224448118516423800998369;
  Q->w[32] = 0.01623081992376074053361712675072936439955;
  Q->w[33] = 0.01294301849527946676137974068124364901474;
  Q->w[34] = 0.009564522244541983021750973970053087065148;
  Q->w[35] = 0.006119390050153778263152426218173287971145;
  Q->w[36] = 0.002636528639748969675861027116765194591544;

  return;
}

void Regel38_Legendre(quadrature *Q) {
  Q->nop = 38;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.0009750347321561900935764617242095012547673;
  Q->xi[1] = 0.005130272866807214027787054447160326337809;
  Q->xi[2] = 0.01257683570492324617955722952680567870401;
  Q->xi[3] = 0.02326683453323520216472892344127939130711;
  Q->xi[4] = 0.03712933397570780158744521889347454425954;
  Q->xi[5] = 0.05407213049768389160253148401304124421005;
  Q->xi[6] = 0.07398248903381890557017514437636185977981;
  Q->xi[7] = 0.09672791619734159222421731201015083713411;
  Q->xi[8] = 0.1221570481230146596311309516103062932481;
  Q->xi[9] = 0.1501006598104078220435870796862920621809;
  Q->xi[10] = 0.1803727920851591464098275652498698641494;
  Q->xi[11] = 0.2127719894760964594335362495377637448949;
  Q->xi[12] = 0.2470826410360344483797331417661739986031;
  Q->xi[13] = 0.283076415283811757813371918741078897997;
  Q->xi[14] = 0.320513779760282493371641189271732854102;
  Q->xi[15] = 0.3591455951049173693199429642906499616152;
  Q->xi[16] = 0.3987147730539416483980111092426964713142;
  Q->xi[17] = 0.4389579873310662900651938093352964417159;
  Q->xi[18] = 0.4796074260477108800433417838351075396076;
  Q->xi[19] = 0.5203925739522891199566582161648924603924;
  Q->xi[20] = 0.5610420126689337099348061906647035582841;
  Q->xi[21] = 0.6012852269460583516019888907573035286858;
  Q->xi[22] = 0.6408544048950826306800570357093500383848;
  Q->xi[23] = 0.679486220239717506628358810728267145898;
  Q->xi[24] = 0.716923584716188242186628081258921102003;
  Q->xi[25] = 0.7529173589639655516202668582338260013969;
  Q->xi[26] = 0.7872280105239035405664637504622362551051;
  Q->xi[27] = 0.8196272079148408535901724347501301358506;
  Q->xi[28] = 0.8498993401895921779564129203137079378191;
  Q->xi[29] = 0.8778429518769853403688690483896937067519;
  Q->xi[30] = 0.9032720838026584077757826879898491628659;
  Q->xi[31] = 0.9260175109661810944298248556236381402202;
  Q->xi[32] = 0.9459278695023161083974685159869587557899;
  Q->xi[33] = 0.9628706660242921984125547811065254557405;
  Q->xi[34] = 0.9767331654667647978352710765587206086929;
  Q->xi[35] = 0.987423164295076753820442770473194321296;
  Q->xi[36] = 0.9948697271331927859722129455528396736622;
  Q->xi[37] = 0.9990249652678438099064235382757904987452;

  Q->w[0] = 0.00250144037481967283794977104594968523192;
  Q->w[1] = 0.005806722358234337088834150600218713678618;
  Q->w[2] = 0.009078288854806618449438062877391101131456;
  Q->w[3] = 0.01228986986911618794760060272335314372298;
  Q->w[4] = 0.01541975027258752732936554315665434446021;
  Q->w[5] = 0.01844704079701236908247008116840747517368;
  Q->w[6] = 0.02135157925233721711793921717940385433921;
  Q->w[7] = 0.02411403093037934168717608995571011209468;
  Q->w[8] = 0.02671600995516615998687849531562437803846;
  Q->w[9] = 0.02914019957349860301115293412907002795756;
  Q->w[10] = 0.03137046669606652702648483576256853216045;
  Q->w[11] = 0.03339196898957020596752307576450962997798;
  Q->w[12] = 0.03519125353344947736964148379682942041963;
  Q->w[13] = 0.03675634629237172857260322242416823928832;
  Q->w[14] = 0.03807683177422319803299677055223626399817;
  Q->w[15] = 0.03914392232910547403768770166786813128245;
  Q->w[16] = 0.03995051662176391079301384196259284827515;
  Q->w[17] = 0.04049124688529855031163473497452907096826;
  Q->w[18] = 0.04076251464019289334960938494291502780082;
  Q->w[19] = 0.04076251464019289334960938494291502780082;
  Q->w[20] = 0.04049124688529855031163473497452907096826;
  Q->w[21] = 0.03995051662176391079301384196259284827515;
  Q->w[22] = 0.03914392232910547403768770166786813128245;
  Q->w[23] = 0.03807683177422319803299677055223626399817;
  Q->w[24] = 0.03675634629237172857260322242416823928832;
  Q->w[25] = 0.03519125353344947736964148379682942041963;
  Q->w[26] = 0.03339196898957020596752307576450962997798;
  Q->w[27] = 0.03137046669606652702648483576256853216045;
  Q->w[28] = 0.02914019957349860301115293412907002795756;
  Q->w[29] = 0.02671600995516615998687849531562437803846;
  Q->w[30] = 0.02411403093037934168717608995571011209468;
  Q->w[31] = 0.02135157925233721711793921717940385433921;
  Q->w[32] = 0.01844704079701236908247008116840747517368;
  Q->w[33] = 0.01541975027258752732936554315665434446021;
  Q->w[34] = 0.01228986986911618794760060272335314372298;
  Q->w[35] = 0.009078288854806618449438062877391101131456;
  Q->w[36] = 0.005806722358234337088834150600218713678618;
  Q->w[37] = 0.00250144037481967283794977104594968523192;

  return;
}

void Regel39_Legendre(quadrature *Q) {
  Q->nop = 39;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.0009263084667835469972638485740897790839951;
  Q->xi[1] = 0.004874231572657008180112441376460897645153;
  Q->xi[2] = 0.01195064533326447307757484005524075285463;
  Q->xi[3] = 0.02211239383767386144455405140445889849911;
  Q->xi[4] = 0.03529542575663088515109151782113271907795;
  Q->xi[5] = 0.05141644035350355607585445456959317446715;
  Q->xi[6] = 0.07037353100004692304310128043697881473246;
  Q->xi[7] = 0.09204685128492844782338366079518508613609;
  Q->xi[8] = 0.1162993785344682500838637978858285272636;
  Q->xi[9] = 0.1429777820527326604330664819240846051678;
  Q->xi[10] = 0.1719133932839945446327870325118719075599;
  Q->xi[11] = 0.2029232725213610056535549626904469659172;
  Q->xi[12] = 0.2358113656697812630518281820958887473296;
  Q->xi[13] = 0.2703697438454319756683766834452138185306;
  Q->xi[14] = 0.3063799180142192720730590171815186519937;
  Q->xi[15] = 0.343614220375907038732001544107185630199;
  Q->xi[16] = 0.3818372437690821163319968363336747759671;
  Q->xi[17] = 0.4208073300010811000386494693193003077666;
  Q->xi[18] = 0.4602780976956222612090414584036796765575;
  Q->xi[19] = 0.5;
  Q->xi[20] = 0.5397219023043777387909585415963203234425;
  Q->xi[21] = 0.5791926699989188999613505306806996922334;
  Q->xi[22] = 0.6181627562309178836680031636663252240329;
  Q->xi[23] = 0.656385779624092961267998455892814369801;
  Q->xi[24] = 0.6936200819857807279269409828184813480063;
  Q->xi[25] = 0.7296302561545680243316233165547861814694;
  Q->xi[26] = 0.7641886343302187369481718179041112526704;
  Q->xi[27] = 0.7970767274786389943464450373095530340828;
  Q->xi[28] = 0.8280866067160054553672129674881280924401;
  Q->xi[29] = 0.8570222179472673395669335180759153948322;
  Q->xi[30] = 0.8837006214655317499161362021141714727364;
  Q->xi[31] = 0.9079531487150715521766163392048149138639;
  Q->xi[32] = 0.9296264689999530769568987195630211852675;
  Q->xi[33] = 0.9485835596464964439241455454304068255328;
  Q->xi[34] = 0.9647045742433691148489084821788672809221;
  Q->xi[35] = 0.9778876061623261385554459485955411015009;
  Q->xi[36] = 0.9880493546667355269224251599447592471454;
  Q->xi[37] = 0.9951257684273429918198875586235391023548;
  Q->xi[38] = 0.999073691533216453002736151425910220916;

  Q->w[0] = 0.002376472345817550685388106577453470992848;
  Q->w[1] = 0.005517394469582297121338402726088644726754;
  Q->w[2] = 0.008628114546862459520402735591677523606858;
  Q->w[3] = 0.0116846924160890822973561722214623494456;
  Q->w[4] = 0.01466747799195168929607799317812571280571;
  Q->w[5] = 0.01755755574906566538053259264861640818333;
  Q->w[6] = 0.02033663842396692196952827804113070184379;
  Q->w[7] = 0.02298715055445831594208831969961639029943;
  Q->w[8] = 0.02549233264606470260701051683829066750881;
  Q->w[9] = 0.02783634517045814995369556989484074135348;
  Q->w[10] = 0.03000436804429807478747088677440974986834;
  Q->w[11] = 0.03198269406934119449335320220503182242789;
  Q->w[12] = 0.03375881548311563268151066402322429688758;
  Q->w[13] = 0.03532150298530438038505746576406556823371;
  Q->w[14] = 0.03666087670713430869057696643252415322395;
  Q->w[15] = 0.03776846866141802885239222349540469954709;
  Q->w[16] = 0.03863727627234100836425581836655864956025;
  Q->w[17] = 0.03926180664368558836253165049276173576129;
  Q->w[18] = 0.0396381112841842355050778858772539652619;
  Q->w[19] = 0.0397638110697214262087090983029254969228;
  Q->w[20] = 0.0396381112841842355050778858772539652619;
  Q->w[21] = 0.03926180664368558836253165049276173576129;
  Q->w[22] = 0.03863727627234100836425581836655864956025;
  Q->w[23] = 0.03776846866141802885239222349540469954709;
  Q->w[24] = 0.03666087670713430869057696643252415322395;
  Q->w[25] = 0.03532150298530438038505746576406556823371;
  Q->w[26] = 0.03375881548311563268151066402322429688758;
  Q->w[27] = 0.03198269406934119449335320220503182242789;
  Q->w[28] = 0.03000436804429807478747088677440974986834;
  Q->w[29] = 0.02783634517045814995369556989484074135348;
  Q->w[30] = 0.02549233264606470260701051683829066750881;
  Q->w[31] = 0.02298715055445831594208831969961639029943;
  Q->w[32] = 0.02033663842396692196952827804113070184379;
  Q->w[33] = 0.01755755574906566538053259264861640818333;
  Q->w[34] = 0.01466747799195168929607799317812571280571;
  Q->w[35] = 0.0116846924160890822973561722214623494456;
  Q->w[36] = 0.008628114546862459520402735591677523606858;
  Q->w[37] = 0.005517394469582297121338402726088644726754;
  Q->w[38] = 0.002376472345817550685388106577453470992848;

  return;
}

void Regel40_Legendre(quadrature *Q) {
  Q->nop = 40;
  Q->xi = (double *)malloc(Q->nop * sizeof(double));
  Q->w = (double *)malloc(Q->nop * sizeof(double));

  Q->xi[0] = 0.0008811451447203998251886487897067538321148;
  Q->xi[1] = 0.004636880650271496773472823889313922518889;
  Q->xi[2] = 0.01137002500811286866831485814354809651067;
  Q->xi[3] = 0.02104159039310417209772950027362035745256;
  Q->xi[4] = 0.03359359586066173331957391657739714178262;
  Q->xi[5] = 0.04895059651556285163587333456575344820776;
  Q->xi[6] = 0.06702024839387024808960909582269001821473;
  Q->xi[7] = 0.08769388458334416840183988466695061304638;
  Q->xi[8] = 0.1108471742867403061525142272467525759897;
  Q->xi[9] = 0.1363408724050364483595017741225347257213;
  Q->xi[10] = 0.1640216576929102258103227425192529450148;
  Q->xi[11] = 0.1937230551660098810236937748846525613099;
  Q->xi[12] = 0.225266437452435898962034347235241014883;
  Q->xi[13] = 0.2584620991569106435457167128775884977005;
  Q->xi[14] = 0.293110397814197499237560127098143158513;
  Q->xi[15] = 0.3290029545871207634962537594104028449665;
  Q->xi[16] = 0.3659239074963731594294078275957019082876;
  Q->xi[17] = 0.403651209649314450142241573967425052593;
  Q->xi[18] = 0.4419579646623723957582743577959879431156;
  Q->xi[19] = 0.4806137912469745890334032779876883526603;
  Q->xi[20] = 0.5193862087530254109665967220123116473397;
  Q->xi[21] = 0.5580420353376276042417256422040120568844;
  Q->xi[22] = 0.596348790350685549857758426032574947407;
  Q->xi[23] = 0.6340760925036268405705921724042980917124;
  Q->xi[24] = 0.6709970454128792365037462405895971550335;
  Q->xi[25] = 0.706889602185802500762439872901856841487;
  Q->xi[26] = 0.7415379008430893564542832871224115022995;
  Q->xi[27] = 0.774733562547564101037965652764758985117;
  Q->xi[28] = 0.8062769448339901189763062251153474386901;
  Q->xi[29] = 0.8359783423070897741896772574807470549852;
  Q->xi[30] = 0.8636591275949635516404982258774652742787;
  Q->xi[31] = 0.8891528257132596938474857727532474240103;
  Q->xi[32] = 0.9123061154166558315981601153330493869536;
  Q->xi[33] = 0.9329797516061297519103909041773099817853;
  Q->xi[34] = 0.9510494034844371483641266654342465517922;
  Q->xi[35] = 0.9664064041393382666804260834226028582174;
  Q->xi[36] = 0.9789584096068958279022704997263796425474;
  Q->xi[37] = 0.9886299749918871313316851418564519034893;
  Q->xi[38] = 0.9953631193497285032265271761106860774811;
  Q->xi[39] = 0.9991188548552796001748113512102932461679;

  Q->w[0] = 0.002260638549266595629235866439092666363916;
  Q->w[1] = 0.005249142265576406807371085533639826188396;
  Q->w[2] = 0.008210529190953944356431742441181963646171;
  Q->w[3] = 0.01112292459708347863075216209210428660352;
  Q->w[4] = 0.01396850349001170054924457875386053865128;
  Q->w[5] = 0.01673009764127392369633909154320542448862;
  Q->w[6] = 0.01939108398723600881998601564522308112673;
  Q->w[7] = 0.0219354540928366359958373430208577479055;
  Q->w[8] = 0.02434790381753611603071708022407319403392;
  Q->w[9] = 0.02661392349196841217749823988613025227766;
  Q->w[10] = 0.02871988454969577568330886545521299280005;
  Q->w[11] = 0.0306531212464644695832689982041992979513;
  Q->w[12] = 0.03240200672830051903727726478337636501635;
  Q->w[13] = 0.0339560229076169519128450541159619929921;
  Q->w[14] = 0.03530582369564338984774181542764341617978;
  Q->w[15] = 0.03644329119790202953025534172125891792878;
  Q->w[16] = 0.0373615845289841321000946681306623365956;
  Q->w[17] = 0.03805518095031312118577903796124741150628;
  Q->w[18] = 0.03851990908212398279415376714190512426222;
  Q->w[19] = 0.03875297398921240563186198147916316348183;
  Q->w[20] = 0.03875297398921240563186198147916316348183;
  Q->w[21] = 0.03851990908212398279415376714190512426222;
  Q->w[22] = 0.03805518095031312118577903796124741150628;
  Q->w[23] = 0.0373615845289841321000946681306623365956;
  Q->w[24] = 0.03644329119790202953025534172125891792878;
  Q->w[25] = 0.03530582369564338984774181542764341617978;
  Q->w[26] = 0.0339560229076169519128450541159619929921;
  Q->w[27] = 0.03240200672830051903727726478337636501635;
  Q->w[28] = 0.0306531212464644695832689982041992979513;
  Q->w[29] = 0.02871988454969577568330886545521299280005;
  Q->w[30] = 0.02661392349196841217749823988613025227766;
  Q->w[31] = 0.02434790381753611603071708022407319403392;
  Q->w[32] = 0.0219354540928366359958373430208577479055;
  Q->w[33] = 0.01939108398723600881998601564522308112673;
  Q->w[34] = 0.01673009764127392369633909154320542448862;
  Q->w[35] = 0.01396850349001170054924457875386053865128;
  Q->w[36] = 0.01112292459708347863075216209210428660352;
  Q->w[37] = 0.008210529190953944356431742441181963646171;
  Q->w[38] = 0.005249142265576406807371085533639826188396;
  Q->w[39] = 0.002260638549266595629235866439092666363916;

  return;
}

void init_Gauss_Legendre(quadrature **Q, int g) {
  assert(g < 40);

  (*Q) = (quadrature *)malloc(g * sizeof(quadrature));
  Regel1_Legendre(&(*Q)[0]);
  if (g == 1) return;
  Regel2_Legendre(&(*Q)[1]);
  if (g == 2) return;
  Regel3_Legendre(&(*Q)[2]);
  if (g == 3) return;
  Regel4_Legendre(&(*Q)[3]);
  if (g == 4) return;
  Regel5_Legendre(&(*Q)[4]);
  if (g == 5) return;
  Regel6_Legendre(&(*Q)[5]);
  if (g == 6) return;
  Regel7_Legendre(&(*Q)[6]);
  if (g == 7) return;
  Regel8_Legendre(&(*Q)[7]);
  if (g == 8) return;
  Regel9_Legendre(&(*Q)[8]);
  if (g == 9) return;
  Regel10_Legendre(&(*Q)[9]);
  if (g == 10) return;
  Regel11_Legendre(&(*Q)[10]);
  if (g == 11) return;
  Regel12_Legendre(&(*Q)[11]);
  if (g == 12) return;
  Regel13_Legendre(&(*Q)[12]);
  if (g == 13) return;
  Regel14_Legendre(&(*Q)[13]);
  if (g == 14) return;
  Regel15_Legendre(&(*Q)[14]);
  if (g == 15) return;
  Regel16_Legendre(&(*Q)[15]);
  if (g == 16) return;
  Regel17_Legendre(&(*Q)[16]);
  if (g == 17) return;
  Regel18_Legendre(&(*Q)[17]);
  if (g == 18) return;
  Regel19_Legendre(&(*Q)[18]);
  if (g == 19) return;
  Regel20_Legendre(&(*Q)[19]);
  if (g == 20) return;
  Regel21_Legendre(&(*Q)[20]);
  if (g == 21) return;
  Regel22_Legendre(&(*Q)[21]);
  if (g == 22) return;
  Regel23_Legendre(&(*Q)[22]);
  if (g == 23) return;
  Regel24_Legendre(&(*Q)[23]);
  if (g == 24) return;
  Regel25_Legendre(&(*Q)[24]);
  if (g == 25) return;
  Regel26_Legendre(&(*Q)[25]);
  if (g == 26) return;
  Regel27_Legendre(&(*Q)[26]);
  if (g == 27) return;
  Regel28_Legendre(&(*Q)[27]);
  if (g == 28) return;
  Regel29_Legendre(&(*Q)[28]);
  if (g == 29) return;
  Regel30_Legendre(&(*Q)[29]);
  if (g == 30) return;
  Regel31_Legendre(&(*Q)[30]);
  if (g == 31) return;
  Regel32_Legendre(&(*Q)[31]);
  if (g == 32) return;
  Regel33_Legendre(&(*Q)[32]);
  if (g == 33) return;
  Regel34_Legendre(&(*Q)[33]);
  if (g == 34) return;
  Regel35_Legendre(&(*Q)[34]);
  if (g == 35) return;
  Regel36_Legendre(&(*Q)[35]);
  if (g == 36) return;
  Regel37_Legendre(&(*Q)[36]);
  if (g == 37) return;
  Regel38_Legendre(&(*Q)[37]);
  if (g == 38) return;
  Regel39_Legendre(&(*Q)[38]);
  if (g == 39) return;
  Regel40_Legendre(&(*Q)[39]);
  if (g == 40) return;
}

void free_Gauss_Legendre(quadrature **Q, int g) {
  int k;
  for (k = 0; k < g; k++) {
    free((*Q)[k].xi);
    free((*Q)[k].w);
  }
  free(*Q);
  return;
}
}  // namespace Bembel